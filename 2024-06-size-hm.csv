status,issue,title,validator comment 1,validator comment 2,validator comment 3,root cause 1,root cause 2,root cause 3,merged root cause,primary finding,proposed root cause group,,,,
Satisfactory,findings-118,Loss of fees for the `feeRecipient` in case of selling credit market,QA at most,swap fee,Missing residual fee collection,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-14,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,,
Satisfactory,findings-128,"Swap fees calculation is inconsistent, producing different fees for essentially the same loans",Insufficient proof,swap fee,Inconsistent swap fee charging,,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-14,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004
Satisfactory,findings-138,`AccountingLibrary.getCreditAmountIn()` calculates swap fees incorrectly.,,swap fee,Inconsistent swap fee charging,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-14,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004
Satisfactory,findings-14,Overestimating the credit amount when `buyCreditMarket` is executed due to not properly deducting the swap fee,,swap fee,Inconsistent swap fee charging,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-14,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004
Satisfactory,findings-23,The protocol cannot collect the full fee when borrowers sell credit without a fragmentation fee.,,swap fee,Missing residual fee collection,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-14,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,,
Satisfactory,findings-50,The protocol fails to collect the full fee accurately when there is a fragmentation fee,"QA at most, fees",swap fee,Missing residual fee collection,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-14,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,,
Satisfactory,findings-54,Swap fees are incorrectly calculated when selling credit as a whole when `exactAmountIn == false`.,"QA at most, fees",swap fee,Inconsistent swap fee charging,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-14,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004
Satisfactory,findings-55,Swap fees are incorrectly calculated when selling partial credit when `exactAmountIn == false`.,"QA at most, fees",swap fee,Inconsistent swap fee charging,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-14,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004
Satisfactory,findings-64,"When users buy existing credit via `BuyCreditMarket` and has `exactAmountIn == true`, it is nearly impossible for users to avoid paying fragmentation fee.","QA at most, fees",feature improvement,buy/sell 100% of positions to avoid fragmentationFee not always possible,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L162,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L175""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L162,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L175,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-64,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004
Satisfactory,findings-65,"When users sell existing credit via `SellCreditMarket` and has `exactAmountIn == false`, it is nearly impossible for users to avoid paying fragmentation fee.","QA at most, fees",feature improvement,buy/sell 100% of positions to avoid fragmentationFee not always possible,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L162,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L175""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L162,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L175,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-64,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004
Satisfactory,findings-85,"executeSellCreditMarket() when creditPositionId == RESERVED_ID , Incorrect calculation of fees","QA at most, fees",swap fee,Inconsistent swap fee charging,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-14,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004
Satisfactory,findings-86,"executeSellCreditMarket() when creditPositionId != RESERVED_ID , Incorrect calculation of fees","QA at most, fees",swap fee,Inconsistent swap fee charging,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L156-L177,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L159-L182,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",findings-14,"""DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004""",DUPE-AccountingLibrary-001,DUPE-AccountingLibrary-002,DUPE-BuyCreditMarket-002,DUPE-SellCreditMarket-004
Satisfactory,findings-82,"validateCompensate() Missing check forSale, may be maliciously modified",,change other user's forSale parameter,Missing for sale check in compensate(),https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L118-L119,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L42,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L42,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L42,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L118-L119""",findings-82,"""DUPE-AccountingLibrary-003,DUPE-Compensate-001""",DUPE-AccountingLibrary-003,DUPE-Compensate-001,,
Satisfactory,findings-56,Buying or selling an existing credit does not validate if the remaining tenor is in range,,tenor range check,Inadequate validation leads to breaking a main invariant of the protocol,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L51,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L51,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L51,findings-56,DUPE-BuyCreditMarket-001,,,,
Satisfactory,findings-131,If the executeBuyCreditMarket function and executeSellCreditMarket function generate a credit split during execution without charging a fragmentation fee,no frag  fee in different code,fragmentation fee RESERVED_ID,fragmentationFee is paid by whoever causes the fragmentation,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L179-L193,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L194-L200""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155""",,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L179-L193,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L194-L200""",findings-131,"""DUPE-BuyCreditMarket-002,DUPE-Compensate-001,DUPE-Compensate-001,DUPE-SellCreditMarket-005""",DUPE-BuyCreditMarket-002,DUPE-Compensate-001,DUPE-Compensate-001,DUPE-SellCreditMarket-005
Satisfactory,findings-146,Possible revert of buying/selling 100% of credit markets.,QA,no significant loss,buy/sell 100% of positions to avoid fragmentationFee not always possible,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L90-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L86-L89""",,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L162,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L175""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L162,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L175,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L90-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L86-L89""",findings-146,"""DUPE-BuyCreditMarket-002,DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-003,DUPE-SellCreditMarket-004""",DUPE-BuyCreditMarket-002,DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-003,DUPE-SellCreditMarket-004
Satisfactory,findings-15,`executeBuyCreditMarket` returns the wrong amount of cash and overestimates the amount that needs to be checked in the variable pool,QA,miss fee in `cashAmountIn`,Insufficient proof alleging the flaw,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L184,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L194,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L243""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L195,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L184""",,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L184-L184,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L194,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L243,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L195""",findings-15,"""DUPE-BuyCreditMarket-002,DUPE-Size-002,DUPE-Size-003,DUPE-Size-003""",DUPE-BuyCreditMarket-002,DUPE-Size-002,DUPE-Size-003,DUPE-Size-003
Satisfactory,findings-8,take profit loss when users sell credit with existing credit,,related to finding#11,validateBuyCreditMarket() has minimum check in place before executeBuyCreditMarket() kicks in,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L121-L198,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L121-L198,findings-8,DUPE-BuyCreditMarket-002,,,,
Satisfactory,findings-119,Improper Validation in the `BuyCreditMarket::validateBuyCreditMarket` Function Causes Incorrect Reverts When `params.exactAmountIn` is True resulting in an invariant break,QA at most,,params.amount as cash not catered for,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,"""https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",findings-16,"""DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002""",DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002,,
Satisfactory,findings-123,BuyCreditMarket and SellCreditMarket can revert despite using correct amount of credit that is more than minimumCreditBorrowAToken,incorrect restriction,minimumCreditBorrowAToken,params.amount as cash not catered for,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,"""https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",findings-16,"""DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002""",DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002,,
Satisfactory,findings-137,Incorrect assumption about params.amount can cause DoS for specific executions,,minimumCreditBorrowAToken,params.amount as cash not catered for,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,"""https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",findings-16,"""DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002""",DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002,,
Satisfactory,findings-145,"While buying/selling credit markets, it might revert when it should work due to the `minimumCreditBorrowAToken` validation.",,minimumCreditBorrowAToken,params.amount as cash not catered for,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,"""https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",findings-16,"""DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002""",DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002,,
Satisfactory,findings-16,`validateSellCreditMarket` and `validateBuyCreditMarket` incorrectly assumes `params.amount` is credit when validating against `minimumCreditBorrowAToken`,incorrect restriction,minimumCreditBorrowAToken,params.amount as cash not catered for,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,"""https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",findings-16,"""DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002""",DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002,,
Satisfactory,findings-57,"In `BuyCreditMarket.sol` and `SellCreditMarket.sol`, this constraint for minimum credit is higher than it should be.",incorrect restriction,minimumCreditBorrowAToken,params.amount as cash not catered for,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,"""https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""",findings-16,"""DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002""",DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002,,
Satisfactory,findings-92,`amount` validations are incorrect for some `exactAmountIn` cases,incorrect restriction,compare credit values to cash values without premium,params.amount as cash not catered for,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L87-L89,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95""","""https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93""","""https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L87-L89""",findings-16,"""DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002,DUPE-SellCreditMarket-003""",DUPE-BuyCreditMarket-003,DUPE-SellCreditMarket-002,DUPE-SellCreditMarket-003,
Satisfactory,findings-114,Protocol is not usable due to incorrect aaveV3 liquidity check,variable pool,aave liquidity check,Incorrect address reference,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L67-L72,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L68,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L60-L75,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L60-L75,findings-114,DUPE-CapsLibrary-001,,,,
Satisfactory,findings-152,Sandwich attack on loan fulfillment will temporarily prevent users from accessing their borrowed funds,interesting,sandwich buy sell,Intended design. Inadequate elaboration alleging the exploit,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L67-L72,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L67-L72,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L67-L72,findings-152,DUPE-CapsLibrary-001,,,,
Satisfactory,findings-35,`CapsLibrary.validateVariablePoolHasEnoughLiquidity()` always revert,,aave liquidity check,Incorrect address reference,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L67-L72,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L68,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L60-L75,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L60-L75,findings-114,DUPE-CapsLibrary-001,,,,
Satisfactory,findings-36,Insufficient Liquidity Check on AAVE Variable Pool for multiple pending borrowers,interesting,should check overall aave liquidity,Insufficient proof alleging the flaw,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L67-L72,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L185-L195,,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L185-L195,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L67-L72""",findings-152,"""DUPE-CapsLibrary-001,DUPE-Size-003""",DUPE-CapsLibrary-001,DUPE-Size-003,,
Satisfactory,findings-7,Incorrect validation in validateVariablePoolHasEnoughLiquidity will cause DoS of the protocol's major functions,variable pool,aave liquidity check,Incorrect address reference,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L67-L72,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L68,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L60-L75,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L60-L75,findings-114,DUPE-CapsLibrary-001,,,,
Satisfactory,findings-80,validateVariablePoolHasEnoughLiquidity() misuse liquidity,variable pool,aave liquidity check,Incorrect address reference,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L67-L72,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L68,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L60-L75,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L60-L75,findings-114,DUPE-CapsLibrary-001,,,,
Satisfactory,findings-13,The `borrowATokenCap` can be bypassed when `deposit` is called by using `multicall`.,QA,borrowATokenCap multicall,Invalid validation entailed,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L19-L44,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29-L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L19-L44""",findings-13,"""DUPE-CapsLibrary-002,DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-CapsLibrary-002,DUPE-Multicall-001,DUPE-Multicall-002,
Satisfactory,findings-27,Borrow aToken cap can be bypassed by depositing via multicall,QA,borrowATokenCap multicall,Invalid validation entailed,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L19-L44,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29-L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L19-L44""",findings-13,"""DUPE-CapsLibrary-002,DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-CapsLibrary-002,DUPE-Multicall-001,DUPE-Multicall-002,
Satisfactory,findings-34,User can bypass `RiskConfig.borrowATokenCap` limit up to 10x times using multicall. Leading to temporary DOS attack,QA,borrowATokenCap multicall,Invalid validation entailed,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L19-L44,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29-L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L19-L44""",findings-13,"""DUPE-CapsLibrary-002,DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-CapsLibrary-002,DUPE-Multicall-001,DUPE-Multicall-002,
Satisfactory,findings-49,"Since the lender and borrower can be the same, BorrowATokenCap can be bypassed.","QA, multicall",borrowATokenCap multicall,Invalid validation entailed,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L19-L44,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29-L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L19-L44""",findings-13,"""DUPE-CapsLibrary-002,DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-CapsLibrary-002,DUPE-Multicall-001,DUPE-Multicall-002,
Satisfactory,findings-59,"Malicious users can perform a grief attack by repaying a loan to themselves using multicall to deposit tokens, thereby exceeding the `borrowATokenCap`.","QA, multicall",borrowATokenCap multicall,Invalid validation entailed,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L19-L44,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29-L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/CapsLibrary.sol#L19-L44""",findings-13,"""DUPE-CapsLibrary-002,DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-CapsLibrary-002,DUPE-Multicall-001,DUPE-Multicall-002,
Satisfactory,findings-32,Fragmentation fee not refunded if the claimer is the credit position owner,,fragmentation fee refund to owner,Insufficient proof alleging the flaw,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Claim.sol#L48-L60,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L202,,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L202,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Claim.sol#L48-L60""",findings-32,"""DUPE-Claim-001,DUPE-SellCreditMarket-001""",DUPE-Claim-001,DUPE-SellCreditMarket-001,,
Satisfactory,findings-10,Fragmentation fee is not taken if user compensates with newly created position,,fragmentation fee RESERVED_ID,Missing check for creditPositionWithDebtToRepay.credit > 0,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136-L136""",findings-10,"""DUPE-Compensate-001,DUPE-Compensate-001""",DUPE-Compensate-001,DUPE-Compensate-001,,
Satisfactory,findings-102,Users cannot make compensation when the due date is within the minimum tenor period,USDC can be converted to ETH,minimum tenor,Inadequate remediation for underwater borrowers,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L60-L62,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L60-L62""",findings-102,"""DUPE-Compensate-001,DUPE-Size-001""",DUPE-Compensate-001,DUPE-Size-001,,
Satisfactory,findings-105,The borrower can `compensate` their debt using credit with soon-to-be-liquidatable debt,Similar to findings-103 but not quite,seems feature improvement,Intended design,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L84-L96,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L76-L82,,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L76-L82,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L84-L96""",findings-105,"""DUPE-Compensate-001,DUPE-RiskLibrary-001""",DUPE-Compensate-001,DUPE-RiskLibrary-001,,
Satisfactory,findings-12,Debt fragmentation via compensate can DOS liquidation attempts,"QA most likely, but still something to consider",fragmentation gas DOS liq,fragmentationFee is paid by whoever causes the fragmentation,https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/Compensate.sol#L119-L126,https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/Compensate.sol#L105-L173,,https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/Compensate.sol#L105-L173,findings-12,DUPE-Compensate-001,,,,
Satisfactory,findings-126,"In the Compensate function, splitting the original credit position through ""mining new credit"" will never charge a fragmentation fee",no frag fee,fragmentation fee RESERVED_ID,Missing check for creditPositionWithDebtToRepay.credit > 0,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136-L136""",findings-24,"""DUPE-Compensate-001,DUPE-Compensate-001""",DUPE-Compensate-001,DUPE-Compensate-001,,
Satisfactory,findings-150,`executeCompensate()` doesn't charge the `fragmentationFee` for `RESERVED_ID`.,no frag fee,fragmentation fee RESERVED_ID,Missing check for creditPositionWithDebtToRepay.credit > 0,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136-L136""",findings-24,"""DUPE-Compensate-001,DUPE-Compensate-001""",DUPE-Compensate-001,DUPE-Compensate-001,,
Satisfactory,findings-153,A rogue borrower can split the lender's credit position into multiple positions without paying fragmentation fees,no frag fee,fragmentation fee RESERVED_ID,Missing check for creditPositionWithDebtToRepay.credit > 0,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136-L136""",findings-24,"""DUPE-Compensate-001,DUPE-Compensate-001""",DUPE-Compensate-001,DUPE-Compensate-001,,
Satisfactory,findings-20,No Fragmentation fees paid on credit fragmentation due to partial debt repayment,no frag fee,fragmentation fee RESERVED_ID,Missing check for creditPositionWithDebtToRepay.credit > 0,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136-L136""",findings-24,"""DUPE-Compensate-001,DUPE-Compensate-001""",DUPE-Compensate-001,DUPE-Compensate-001,,
Satisfactory,findings-22,Users can avoid full liquidation by splitting up their debt,"QA most likely, but still something to consider",liq split mechanism could be abused,Back to square one with the split exploit,https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/Compensate.sol#L119-L126,https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/Liquidate.sol#L112,,"""https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/Liquidate.sol#L112,https://github.com/code-423n4/size-solidity/blob/main/src/libraries/actions/Compensate.sol#L119-L126""",findings-22,"""DUPE-Compensate-001,DUPE-Liquidate-001""",DUPE-Compensate-001,DUPE-Liquidate-001,,
Satisfactory,findings-24,No fragmentation fee is taken when `compensate` is performed using `RESERVED_ID`.,no frag fee,fragmentation fee RESERVED_ID,Missing check for creditPositionWithDebtToRepay.credit > 0,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136-L136""",findings-24,"""DUPE-Compensate-001,DUPE-Compensate-001""",DUPE-Compensate-001,DUPE-Compensate-001,,
Satisfactory,findings-28,Borrower will not be charged fragmentation fee when creating new credit position when compensating a credit partially,no frag fee,fragmentation fee RESERVED_ID,Missing check for creditPositionWithDebtToRepay.credit > 0,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136-L136""",findings-24,"""DUPE-Compensate-001,DUPE-Compensate-001""",DUPE-Compensate-001,DUPE-Compensate-001,,
Satisfactory,findings-62,"In `Compensate.sol`, fragmentation fee is not charged when compensate amount is less than `creditPositionWithDebtToRepay.credit`.",no frag fee,fragmentation fee RESERVED_ID,Missing check for creditPositionWithDebtToRepay.credit > 0,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136-L136""",findings-24,"""DUPE-Compensate-001,DUPE-Compensate-001""",DUPE-Compensate-001,DUPE-Compensate-001,,
Satisfactory,findings-76,Compensating borrowers could bear unexpected fragmentation fees,frag fee should be applied in all cases?,"fragmentation fee multi lender, maybe feature improvement",Missing check for creditPositionWithDebtToRepay.credit > 0,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L127-L136,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L127-L136""",findings-76,"""DUPE-Compensate-001,DUPE-Compensate-001""",DUPE-Compensate-001,DUPE-Compensate-001,,
Satisfactory,findings-78,Users cannot eliminate the liquidation risk when the CR falls below the liquidation CR by repaying partially,,partial repay should increase CR,Inadequate remediation for underwater borrowers,,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L120-L125,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250""",https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L120-L125,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250""",findings-78,"""DUPE-Compensate-001,DUPE-Size-001""",DUPE-Compensate-001,DUPE-Size-001,,
Satisfactory,findings-95,Unhealthy borrowers can recover all collateral and avoid liquidation penalty via `Size::compensate`,,abuse split,Intended design as long as crLiquidation isn't hit,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L31-L101,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L42-L145,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L31-L145,findings-95,DUPE-Compensate-001,,,,
Satisfactory,findings-87,compensate() may increase the risk of lender,,need to investigate if borrower maliciously transfer funding risk,No guarantee new borrower is healthier,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L64-L89,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L64-L89,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L64-L89,findings-87,DUPE-Compensate-002,,,,
Satisfactory,findings-104,Liquidator profit collateral is underestimated due to an inconsistency in units,,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-110,liquidatorReward is calculated with the wrong token leading to incorrect amount of funds being sent to the liquidator,,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-115,Wrong math for splitting the collateral in `liquidate` leads to unfair liquidation for borrowers,,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-125,Liquidator's reward is significantly lower than it should be,units,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-139,`Liquidate.executeLiquidate()` calculates `liquidatorReward` incorrectly.,,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-140,`Liquidate.executeLiquidate()` calculates `collateralRemainderCap` incorrectly.,,liq collateralRemainderCap,Flawed calculation affecting borrower with healthier collateral ratio status,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L105-L108,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L107-L108,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L90-L113,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L90-L113,findings-140,DUPE-Liquidate-001,,,,
Satisfactory,findings-151,Unfair calculation logic of protocol profit during liquidation,,liq protocolProfitCollateralToken,Flawed calculation affecting borrower with healthier collateral ratio status,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L108,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L90-L113,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L90-L113,findings-151,DUPE-Liquidate-001,,,,
Satisfactory,findings-17,Incorrectly using `futureValue` instead of `debtInCollateralToken` when calculating `liquidatorReward`,units,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-21,Users won't liquidate positions because the logic used to calculate the liquidator's profit is incorrect,units,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-26,Lender USDC reward is not converted to collateral token,units,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-45,Wrong Liquidator Rewards Calculation,units,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-52,LiquidatorReward is incorrectly calculated,units,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-70,The collateral remainder cap is incorrectly calculated during liquidation,,liq collateralRemainder,Flawed calculation affecting borrower with healthier collateral ratio status,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L105-L108,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L110,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L90-L113,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L90-L113,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L105-L108""",findings-140,"""DUPE-Liquidate-001,DUPE-Liquidate-001""",DUPE-Liquidate-001,DUPE-Liquidate-001,,
Satisfactory,findings-72,Liquidator rewards are incorrectly calculated,units,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-73,Overdue liquidations punish overcollaterized users,seems like a business choice,liq penalty mechanism,Flawed calculation affecting borrower with healthier collateral ratio status,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L103-L112,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L90-L113,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L90-L113,findings-73,DUPE-Liquidate-001,,,,
Satisfactory,findings-79,Liquidator receive a smaller reward because `liquidatorReward` is the minimum between a `collateral` amount and a `borrowAToken` amount,units,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-83,executeLiquidate() miscalculation liquidatorReward,units,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-97,Wrong comparison of token values causes liquidator profit to be negligible,units,liquidatorreward,18 decimal debtInCollateralToken NOT used,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L96-L99,findings-21,DUPE-Liquidate-001,,,,
Satisfactory,findings-98,"Miscalculation of remaining collateral, protocol cut when liquidating overdue loans is too high",,liq collateralRemainder,Flawed calculation affecting borrower with healthier collateral ratio status,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L105-L108,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L110,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L90-L113,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L90-L113,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L105-L108""",findings-140,"""DUPE-Liquidate-001,DUPE-Liquidate-001""",DUPE-Liquidate-001,DUPE-Liquidate-001,,
Satisfactory,findings-75,Underwater liquidations don't take into account the borrower's future cash flows to compensate his debt,seems like a business choice,liq should consider future cash flow,Missing check on first defense,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L37-L44,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L37-L44,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L37-L44,findings-75,DUPE-Liquidate-002,,,,
Satisfactory,findings-106,By only taking into account the liquidatorProfit when calling liquidateWithReplacement() the caller might miss out on profitable liqudations,All terminology appears explicit and purposefuly excludes the borrow token,miss liquidatorProfit,liquidatorProfit in borrow tokens not catered for,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L147,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L147,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L147,findings-106,DUPE-LiquidateWithReplacement-001,,,,
Satisfactory,findings-113,Size liquidation bots might skip profitable liquidations due to the minimum collateral profit check.,All terminology appears explicit and purposefuly excludes the borrow token,bot's choice of borrower makes the protocol loss profit,liquidatorProfit in borrow tokens not catered for,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L138,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L147,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L147,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L138""",findings-106,"""DUPE-LiquidateWithReplacement-001,DUPE-LiquidateWithReplacement-003""",DUPE-LiquidateWithReplacement-001,DUPE-LiquidateWithReplacement-003,,
Satisfactory,findings-141,`LiquidateWithReplacement.executeLiquidateWithReplacement()` should charge a swap fee from a new borrower.,no fee on replacement,liq miss swap fee,Intended design,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,findings-53,DUPE-LiquidateWithReplacement-002,,,,
Satisfactory,findings-53,LiquidateWithReplacement does not charge swap fees on the borrower,no fee on replacement,liq miss swap fee,Intended design,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,findings-53,DUPE-LiquidateWithReplacement-002,,,,
Satisfactory,findings-71,The borrower can borrow USDC without a swap fee,no fee on replacement,liq miss swap fee,Intended design,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,findings-53,DUPE-LiquidateWithReplacement-002,,,,
Satisfactory,findings-25,"Pausing prevents debt repayment, leading to immediate liquidation if the debt is overdue when unpaused.",Acceptable risk but should be noted regardless,related to finding#5,Overdue liquidations not catered for,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L104-L115,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L137,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L104-L115""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L137,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L137,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L104-L115""",findings-25,"""DUPE-LoanLibrary-001,DUPE-RiskLibrary-002""",DUPE-LoanLibrary-001,DUPE-RiskLibrary-002,,
Satisfactory,findings-5,The debtor can be liquidated if his loan due date has come while the protocol is in the paused state,Acceptable risk but should be noted regardless,cannot repay if paused,Overdue liquidations not catered for,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L104-L115,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136""",https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L104-L115,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136""",findings-25,"""DUPE-LoanLibrary-001,DUPE-RiskLibrary-002""",DUPE-LoanLibrary-001,DUPE-RiskLibrary-002,,
Satisfactory,findings-77,`repay` is not callable during a pause,Acceptable risk but should be noted regardless,cannot repay if paused,Overdue liquidations not catered for,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L104-L115,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136""",https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L198,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L104-L115,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L198""",findings-25,"""DUPE-LoanLibrary-001,DUPE-RiskLibrary-002,DUPE-Size-005""",DUPE-LoanLibrary-001,DUPE-RiskLibrary-002,DUPE-Size-005,
Satisfactory,findings-144,The `borrowATokenCap` requirement doesn't work during a multicall.,totalsupply?,borrowATokenCap multicall,Invalid validation entailed,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""",findings-144,"""DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-Multicall-001,DUPE-Multicall-002,,
Satisfactory,findings-18,Users can bypass the borrowAToken cap check by using multicall,maybe abs,borrowATokenCap multicall,Invalid validation entailed,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""",findings-144,"""DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-Multicall-001,DUPE-Multicall-002,,
Satisfactory,findings-19,"When the borrowAToken cap is reached, users may not always be able to repay their debt in some cases due to precision errors",,borrowATokenCap multicall,Extremely edge case,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,findings-19,DUPE-Multicall-001,,,,
Satisfactory,findings-6,Multicall incorrectly validates borrow token supply cap,total supply instead of balance?,borrowATokenCap multicall,Invalid validation entailed,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""",findings-144,"""DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-Multicall-001,DUPE-Multicall-002,,
Satisfactory,findings-81,multicall() borrowATokenSupply amount wrong,total supply?,borrowATokenCap multicall,Invalid validation entailed,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""",findings-144,"""DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-Multicall-001,DUPE-Multicall-002,,
Satisfactory,findings-91,`multicall()` doesn't correctly enforce `borrowATokenCap`,totalsupply?,borrowATokenCap multicall,Invalid validation entailed,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""",findings-144,"""DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-Multicall-001,DUPE-Multicall-002,,
Satisfactory,findings-96,"Using multicall functionality, one can bypass the deposit cap even without reducing debt",totalsupply?,borrowATokenCap multicall,Invalid validation entailed,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""","""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37""",findings-144,"""DUPE-Multicall-001,DUPE-Multicall-002""",DUPE-Multicall-001,DUPE-Multicall-002,,
Satisfactory,findings-100,"Repaying an underwater debt is dangerous, as the borrower could lose the repayment cash while still being liquidated if a `liquidateWithReplacement()` is executed before the `repay()`",dangerous race condition,repay for other user after liquidation,Refactoring needed to avoid mishap,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229-L244,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Repay.sol#L33-L41""","""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229-L244,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Repay.sol#L33-L41""",findings-147,"""DUPE-Repay-001,DUPE-Size-002""",DUPE-Repay-001,DUPE-Size-002,,
Satisfactory,findings-147,A user might repay the wrong borrower.,,repay for other user after liquidation,Refactoring needed to avoid mishap,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229-L244,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Repay.sol#L33-L41""","""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229-L244,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Repay.sol#L33-L41""",findings-147,"""DUPE-Repay-001,DUPE-Size-002""",DUPE-Repay-001,DUPE-Size-002,,
Satisfactory,findings-42,Repay do not check debt position already moved to another borrower or belong to `msg.sender`,dangerous race condition,repay for other user after liquidation,Refactoring needed to avoid mishap,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229-L244,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Repay.sol#L33-L41""","""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229-L244,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Repay.sol#L33-L41""",findings-147,"""DUPE-Repay-001,DUPE-Size-002""",DUPE-Repay-001,DUPE-Size-002,,
Satisfactory,findings-11,"The initiator should pay the fragmentation fees in the sellCreditMarket function, rather than the lender.",,fragmentation fee should be from initiator,Insufficient proof alleging the flaw,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L202,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L202,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L202,findings-11,DUPE-SellCreditMarket-001,,,,
Satisfactory,findings-107,Borrower is not able to compensate his lenders if he is underwater,Seems like a missing feature,"underwater cannot use compensate to repay
 maybe expected behavior, just like portfolio margin and standard margin",Inadequate remediation for underwater borrowers,,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250,findings-107,DUPE-Size-001,,,,
Satisfactory,findings-58,Underwater users are not allowed to use `compensate()` to repay debts,Seems like a missing feature,"underwater cannot use compensate to repay
 maybe expected behavior, just like portfolio margin and standard margin",Inadequate remediation for underwater borrowers,,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250,findings-107,DUPE-Size-001,,,,
Satisfactory,findings-143,Inconsistent liquidity validation for a variable pool,QA,aave liquidity amount,Insufficient proof alleging the flaw,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L184,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L194,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L243""","""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L184,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L194,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L243""",,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L184,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L194,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L243""",findings-143,"""DUPE-Size-002,DUPE-Size-003,DUPE-Size-003""",DUPE-Size-002,DUPE-Size-003,DUPE-Size-003,
Satisfactory,findings-109,"Unhealthy borrower is able to ""withdraw"" most of his borrow tokens",Seems interesting,maybe expected behavior,Incorrect assumptions. Wouldn't click,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L166-L168,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L178-L185""","""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L178-L185,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L166-L168""",,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L178-L185,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L166-L168""",findings-101,"""DUPE-Size-003,DUPE-Size-004""",DUPE-Size-003,DUPE-Size-004,,
Unsatisfactory,findings-101,Bad actors can grief users by creating useless loans on their behalf via `Size::compensate`,,no loss,Intended design as long as crLiquidation isn't hit,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L103-L127,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L42-L101""",,,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L103-L127,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L42-L101""",,,,,,
Unsatisfactory,findings-103,Compensate allows lenders to transfer bad credit positions before an oracle update,appears to be QA,frontrun oracle update,Commonly known issue in front-running,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L95,,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L95,,,,,,
Unsatisfactory,findings-108,"Credit value stops growing when the debt is overdue, causing a loss for the lender.","If it continued to grow, it would reduce its likelihood of being repaid",overdue debt should continue accure interest,Intended design justifying oeverdue loan being liquidable,,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Repay.sol#L46-L54,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L118-L125""",,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Repay.sol#L46-L54,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L118-L125""",,,,,,
Unsatisfactory,findings-116,"Exploit in `liquidateWithReplacement` allows bots to force lenders into repaying their own loans, causing financial loss",,expected behavior,Low QA on admin controlled call,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L47-L93,,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L47-L93,,,,,,
Unsatisfactory,findings-117,Picking a second borrower with 0 APR when calling the `liquidateWithReplacement` by bots leads to no profit for the protocol,QA at most,bot's choice of borrower makes the protocol loss profit,Low QA on admin controlled call,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L138,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L138,,,,,,
Unsatisfactory,findings-120,Credit buyers can't use a longer due date than the due date of for sale credit position,Missing feature,"against doc specs, but no loss, design choice",Intended design,,,,"""""",,,,,,
Unsatisfactory,findings-124,A user can be in a loan all by himself - being the lender and the borrower of the same loan,,no loss,No lender would do it for an immediate loss,,,,"""""",,,,,,
Unsatisfactory,findings-129,"User can transfer OVERDUE loans, when he isn't expected to and there are checks that try to prevent that",,expected behavior,Intended design,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L84-L96,,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L84-L96,,,,,,
Unsatisfactory,findings-130,Incorrect calculation of deposit amount using address(this).balance,multicall countermeasure,address(this).balance,"Readme: This means leftover amounts, if sent forcibly, are always credited to the depositor.",,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Deposit.sol#L71,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Deposit.sol#L71,,,,,,
Unsatisfactory,findings-133,The user's funds may all be used to submit the transaction fee,min check exists,,Already checked and circumvented by state.feeConfig.fragmentationFee > cashAmountIn,,,,"""""",,,,,,
Unsatisfactory,findings-134,latestRoundData() has no check for round completeness,,oracle stale,Unneeded check,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L64-L89,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L64-L89,,,,,,
Unsatisfactory,findings-136,ChainlinkOracle will return the wrong price for asset if underlying aggregator hits minAnswer,best practice,oracle minAnswer,No longer needed per Chainlink,,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,,,,,,
Unsatisfactory,findings-142,A meaningless liquidity validation for a variable pool,,aave liquidity amount,Insufficient proof alleging the flaw,,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L184,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L194,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L243""",,"""https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L184,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L194,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L243""",,,,,,
Unsatisfactory,findings-148,`executeLiquidateWithReplacement()` doesn't validate `minimumCreditBorrowAToken` while replacing a debt position.,Replacements should not apply new rules,updated minimumCreditBorrowAToken,Low QA as it's handled by the protocol team,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L150,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L150,,,,,,
Unsatisfactory,findings-149,No `minCollateralOut/deadline` validation in `selfLiquidate()`.,no slippage on self liq,feature improvement,Inconsequential for the context entailed,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SelfLiquidate.sol#L34-L54,,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SelfLiquidate.sol#L34-L54,,,,,,
Unsatisfactory,findings-155,BorrowOffers with high APR cause DOS in order to grief lenders,,no loss,Low QA on orderbook spamming,,,,"""""",,,,,,
Unsatisfactory,findings-156,Malicious offers can significantly impact the usability of the protocol,,"feature improvement, no loss",Low QA on orderbook spamming. Unlikely to happen too,,,,"""""",,,,,,
Unsatisfactory,findings-29,Rounding against the protocol will result in less rewards,,rounding direction rewards,Low QA and Inconsequential. It seems protocol intended with the use of Math.min too,,,,"""""",,,,,,
Unsatisfactory,findings-3,PriceFeed doesn't check min/max price boundaries,,oracle minAnswer,No longer needed per Chainlink,,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,,,,,,
Unsatisfactory,findings-30,Lender can be forced to pay swap and fragmentation fees on claimable credit amounts,,"feature improvement, no loss",Insufficient proof alleging claimed amount is available for borrow without lender's control,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Claim.sol#L48-L60,,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Claim.sol#L48-L60,,,,,,
Unsatisfactory,findings-31,Strategic credit fragmentation by borrower can force lender to get liquidated on their borrow positions,,borrower cannot timely repay if too many fragments,fragmentationFee is paid by whoever causes the fragmentation,,,,"""""",,,,,,
Unsatisfactory,findings-33,Lender can be forced out of existing positions unwillingly if they have an open SELL LMT order,,new bought position should not be forSale,Intended design,,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119""",,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119""",,,,,,
Unsatisfactory,findings-37,Use of `isMulticall` is unsafe for future contract upgrades without reentrancy protection,,,No actual scenario given,,,,"""""",,,,,,
Unsatisfactory,findings-38,Liquidator cannot deposit both USDC and WETH through multicall in same transaction if there is `msg.value` included,,feature improvement,Inadequate elaboration on the needed use case,,,,"""""",,,,,,
Unsatisfactory,findings-39,`LiquidateWithReplacement` not take fee on new borrower,,miss fee for borrower replacement,Intended design,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146-L147,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146-L147,,,,,,
Unsatisfactory,findings-4,Limit order offerers have little control over amounts they would borrow or lend,,feature improvement slippage,Intended design,,,,"""""",,,,,,
Unsatisfactory,findings-40,Lender-Enforced 150% Collateral Ratio Creates Extreme Risk for Borrowers,,feature improvement,Seemingly known readme issue,,,,"""""",,,,,,
Unsatisfactory,findings-41,`LiquidateWithReplacement` Fails to Reduce Liquidator Costs and have no benefit over standard `Liquidation` call,,no loss,liquidatorProfit in borrow tokens not catered for,,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L120-L163,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L120-L163,""""""",,,,,,
Unsatisfactory,findings-43,Admin config lack of some validation for `crLiquidation` and `crOpening`,QA,admin mistake,Low QA on admin controlled input parameter,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/UpdateConfig.sol#L87-L93,,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/UpdateConfig.sol#L87-L93,,,,,,
Unsatisfactory,findings-44,Lack of Borrower Protection: Borrower loss when borrow offer APR is higher than lend offer APR,,feature improvement,Intended design. Borrowers be aware,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L51-L115,,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L51-L115,,,,,,
Unsatisfactory,findings-46,`openingLimitBorrowCR` is Inadequate to Protect Borrowers from more Debt after Repayment or Liquidation,,expected behavior,Seemingly known readme issue,,,,"""""",,,,,,
Unsatisfactory,findings-47,`SellCreditMarket` with non-ExactAmountIn calculate wrong credit for borrower,"QA at most, fees",expected behavior,Incorrect assumptions,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",,,"""https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256""",,,,,,
Unsatisfactory,findings-60,"If a user has placed both a buy limit order and a sell limit order, and the sell limit order has a lower APR, the user will be vulnerable to arbitrage.",user mistake?,expected behavior,Incorrect assumptions and perceptions,,,,"""""",,,,,,
Unsatisfactory,findings-61,"Anyone can call the `claim()` function to claim credit for the lender, which increases the lender's borrowAToken and may cause them to lend more tokens than expected.",,expected behavior,Insufficient proof alleging claimed amount is available for borrow without lender's control,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Claim.sol#L48-L60,,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Claim.sol#L48-L60,,,,,,
Unsatisfactory,findings-63,"The `compensate()` function can be frontrun, causing users to pay an unnecessary fragmentation fee.",,seems expected behavior,fragmentationFee is paid by whoever causes the fragmentation,,,,"""""",,,,,,
Unsatisfactory,findings-66,YieldCurveLibrary.sol#getAdjustedAPR does not check if variablePoolBorrowRate is non-zero.,,,Low QA on uninitialized variablePoolBorrowRate,,,,"""""",,,,,,
Unsatisfactory,findings-67,LiquidateWithReplacement should round up issuanceValue instead of rounding down.,QA,rounding direction against doc specs,Low QA and inconsequential,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,,,,,,
Unsatisfactory,findings-68,NonTransferrableScaledToken is not ERC20 compliant - it does not correctly fire the `Transfer` event.,,no significant loss,Emitted in parental _update(),,,,"""""",,,,,,
Unsatisfactory,findings-74,Overcollaterized users can withdraw their collateral in anticipation of liquidation,seems unavoidable?,seems expected behavior,Intended design,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L103-L112,,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L103-L112,,,,,,
Unsatisfactory,findings-84,"borrowAToken and aToken rounds direction are not the same, which can cause multiple problems.",,rounding direction inconsistent,Low QA and inconsequential,,https://github.com/code-423n4/2024-06-size/blob/main/src/token/NonTransferrableScaledToken.sol#L99,,https://github.com/code-423n4/2024-06-size/blob/main/src/token/NonTransferrableScaledToken.sol#L99,,,,,,
Unsatisfactory,findings-88,withdraw() users may can't withdraw underlyingBorrowToken properly,,should treat CollateralToken and BorrowToken differently,Intended design,,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L162,,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L162,,,,,,
Unsatisfactory,findings-90,The `szaUSDC` token and `USDC` token do not have a strict 1:1 conversion ratio,,no loss for this protocol,The protocol does not support rebasing/fee-on-transfer tokens,,,,"""""",,,,,,
Unsatisfactory,findings-94,Validations aren't sufficient to prevent reorg issues,,re org,Infeasible per the described POC,,,,"""""",,,,,,
Unsatisfactory,findings-99,The borrowers cannot withdraw the borrowed USDC because there is no upper limit on the borrowing amount,,expected behavior,Intended design,,,,"""""",,,,,,