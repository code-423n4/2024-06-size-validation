issue,title,validator comment,grade,root cause (URL),size
validation-100,CreditPosition is forsale immediately after created ,forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",58
validation-107,[M-02] Incorrect rounding down in `PriceFeed::getPrice()` function can lead to precision loss,,Unsatisfactory,,23
validation-108,Users can not to buy/sell minimum credit allowed due to exactAmountIn condition,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,122
validation-110,Users can not withdraw USDC when they are below the opening limit borrow CR,too strict CR affect withdraw,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L162,53
validation-111,Wrong calculation of `liquidatorReward` in `executeLiquidate`,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,37
validation-113,Users can deposit USDC above the AToken cap,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,36
validation-114,A attacker can fill up the whole block at near the end of a loan to prevent the borrower from repaying and then profit from the liquidation process,"block stuffing to liquidate, but only if the user repay at last minute",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L198-L201",30
validation-116,Mismatch between the code and documentation could lead to DoS ,,Unsatisfactory,,122
validation-119,Malicious actor could change core protocol's configuration params,,Unsatisfactory,,38
validation-120,`liquidateWithReplacement` and `buyCreditMarket` can be DoS in some cases,"temporary DOS liq, but when price drops fast, it could lead to loss",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L182,96
validation-121,deposit `underlyingBorrowToken` can be DoS,"sandwich to grief, but seems no big loss",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Deposit.sol#L80,87
validation-122, `asigneCollateral` variable is incorrectly rounding down,rounding direction liq,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L157,119
validation-123,Lack of validation for `cashAmountOut` in `SellCreditMarket` when `exactAmountIn == true` allows creating a loan without fee,validation cashAmountOut,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L160-L167,117
validation-124,Lender has to have a borrowOffer to exit early,same struct order cause unexpected borrow,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L177-L186, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L86-L88",105
validation-125,Lack of validation for `cashAmountIn` in `BuyCreditMarket` when `exactAmountIn == false` allows creating a loan with only `1 AToken` fee,validation cashAmountIn,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L92-L95,114
validation-126,Malicious user can reduce victim's credit amount,,Unsatisfactory,,40
validation-127,Bad debt cannot be liquidated when contract is paused,paused cannot repay,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136",35
validation-128,"Old borrowOffer lingering can affect all future newly acquired credit positions, leading to unintended transactions ",forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",99
validation-129,The calculation in the credit fractionalization situation may lead to manipulation of credit amount,,Unsatisfactory,,63
validation-137,"Protocol's liqiudation profit is fully relying on the loan's collateral remainder, forcing the protocol to earn inconsistent rewards when liquidating loans of same debt",inconsistent liq fee/profit,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L104-L112,216
validation-138,Wrong check when `buyCreditMarket` is been called with `param.exactAmountIn` equal to true.,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,123
validation-141,Incorrect calculation of the cap on the liquidation reward leads to loss of funds,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,74
validation-142,Missing a necessary validation for tenor which can allow the tenor to be lower than the min threshold set by the protocol safety parameter,"tenor range, relate to validation#522",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L51-L115,56
validation-143,Borrower always can DoS a Lender trying to exit credit early.,frontrun DOS early exit with compensate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L87,123
validation-144,Attaching payable modifier to external functions not handling msg.value will lead to locking of funds,,Unsatisfactory,,33
validation-145,The `borrowATokenCap` can be bypassed,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,126
validation-146,"Approvals can be revoked by the token owner, leading to liquidations being reverted",,Unsatisfactory,,45
validation-147,Wrong unscale could lead to stuck amount,,Unsatisfactory,,102
validation-148,Borrowers can deny lenders that are trying to early exit a position,frontrun DOS early exit with compensate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L87,58
validation-150,Borrowers can avoid liquidations under certain conditions,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,69
validation-152,Users can avoid paying fragmentation fees,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",72
validation-154,Inability to perform partial liquidations allows huge positions to does not get liquidate ,need partial liquidation,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L70-L128,48
validation-155,The `collateralRemainderCap`  is not the correct cap,seems misunderstanding,Unsatisfactory,,130
validation-159,"Because of a decimal issue, the liquidator gets next to nothing as a liquidation rewards when liquidating a borrow position",liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,142
validation-161,Whales might not be able to get liquidated due to no way to partially liquidate,need partial liquidation,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L70-L128,24
validation-162,Users might not be able to withdraw USDC from the protocol,"aave pool balance, relate to findings#152",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L67-L72,40
validation-163,User could sell its credit without intention,forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",290
validation-165,Inadequate safety parameters validation -- missing the check of a gap as the buffer zone between crOpening and crLiquidation,,Unsatisfactory,,33
validation-166,"The updateConfig about the `crLiquidation` is currently using a risky design, but there is a safer design for it",,Unsatisfactory,,37
validation-167,Debt repayment and collateral loss risk if Size contract is paused,paused cannot repay,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136",30
validation-18,Inconsistent Intermediate Asset Check in PriceFeed Constructor Leading to Incorrect Price Calculations,,Unsatisfactory,,122
validation-180,Missing check for `RoundID`,,Unsatisfactory,,49
validation-181,Bad stale borrowRate check could lead to borrow/lend at unexpected rate,,Unsatisfactory,,105
validation-182,Invalid `price` check,oracle minAnswer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,40
validation-183,In `getAdjustedAPR` the APR will not be adjusted and it will revert,,Unsatisfactory,,63
validation-184,Lack of Loan Status Check in `createCreditPosition` Function Allows Modification of Non-Active Loans,,Unsatisfactory,,22
validation-187,liquidatorReward is Incorrectly calculated: Inconsistent Units,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,45
validation-189,Incorrect Validation Logic in UpdateConfig.sol,"cr updating validation, relate to validation#421",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/UpdateConfig.sol#L87-L92, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Initialize.sol#L108-L110",27
validation-190,Liquidated user is favored instead of liquidator when calculating the debt positions assigned collateral,no significant loss,Unsatisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L157,43
validation-191, `executeLiquidate()` liquidaterReward is totally underestimated because the computation computes `futureValue` as 6 decimals,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,88
validation-192,User's collateral Can Be Infllated  With Just 1 wei,address(this).balance,Unsatisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Deposit.sol#L71,98
validation-194,Mistakenly sent eth could be locked,,Unsatisfactory,,54
validation-195,Incorrect checked address in `CapsLibrary.validateVariablePoolHasEnoughLiquidity` causes critical functions to be in a DoS state,aave liquidity check,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L68,98
validation-196,"Size uses wrong source to query available liquidity on Aave, resulting in borrow and lend operations being bricked upon mainnet deployment",aave liquidity check,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L68,155
validation-197,Size can overestimate liquidity on borrowing and lending actions after Aave upgrades to v3.1,aave liquidity check,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L68,75
validation-198,Deposit of ETH and USDC will not work together in multicall ,,Unsatisfactory,,60
validation-201,Borrower should always get liquidated from the smaller debt position. ,"liq mechanism, should start from small position, relate to validation#358",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L100,33
validation-203,The method of calculate liquidator reward is incorrect,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,98
validation-208,"Bad amount validation could lead to DoS, when `buyCreditMarket` called",minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,109
validation-212,No incentives to write off bad debt when remaining collateral is very small,liq unprofitable,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L100,19
validation-213,Errors in the calculation of the liquidator's reward result in the protocol not being able to correctly allocate the liquidation reward,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,253
validation-214,"Bad amount validation could lead to DoS, when `sellCreditMarket` called",minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,42
validation-215,Overdue positions that are well collateralized will suffer greater losses than expected,liq fee math,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L107-L112,88
validation-218,A lender can lose borrowAmount when another lender buys his creditpositionid,sell between lenders won't maintain APR range,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L127-L204,39
validation-219,Lack of Penalty Fees for Overdue Repayments Leads to Increased Liquidations and Financial Risks,"more like feature improvement, relate to findings#108",Unsatisfactory,,184
validation-22,"The validation in `validateMinimumCredit` function is incorrect, which will result in  the credit amount after reduced below the minimum credit",,Unsatisfactory,,57
validation-220,No storage gaps in `Size.sol`,QA,Unsatisfactory,,22
validation-221,Users will not be able to withdraw their USDC in some cases,too strict CR affect withdraw,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L162,75
validation-222,Liquidators are unfairly robbed of their liquidation reward,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,35
validation-223,Borrowers can frontrun lenders to decrease apr and lenders can frontrun borrowers to increase apr.,"frontrun protection, relate to validation#98",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditLimit.sol#L58, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditLimit.sol#L45",44
validation-226,`liquidateWithReplacement` can be DoS by the borrower,"temporary DOS liq, but when price drops fast, it could lead to loss",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L72,68
validation-227,Attackers can frontrun forSale - false  and  allCreditPositionsForSaleDisabled - true  for a creditpositonid and buy the creditpositionid.,forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",30
validation-228,There is a missing check when compensating of a credit position.,"forsale check, relate to findings#82, validation#580",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L139,35
validation-229,"Liquidator would never see intended profit from liquidations, due to bad liquidatorReward calculation",liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,98
validation-230,"YieldCurve accepts negative apr inputs, which can lead to sell/buyCreditLimit orders being able to get listed but possibly never gonna get fulfilled",,Unsatisfactory,,71
validation-231,`executeSellCreditMarket` function allows transfer of credit positions to blacklisted addresses,,Unsatisfactory,,382
validation-232,Incorrect fee calculation in `AccountingLibrary.getCreditAmountIn` causing the protocol to receive a lower swap fee,"swap fee, 2 places",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256",215
validation-233,The variablePoolBorrowRateStaleRateInterval is lack of zero check which can lead to DOS,,Unsatisfactory,,65
validation-234,The ChainLink Oracle in `PriceFeed.sol` could return the wrong price since there are no min/max Circuit breaker checks. breaker checks,oracle minAnswer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,28
validation-237,Repay and liquidate are pausable but no grace period applied to liquidations after protocol gets unpaused which would lead to unfair liquidations of users,paused cannot repay,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136",48
validation-238,Inability to perform partial liquidations allows huge positions to accrue bad debt in the system,need partial liquidation,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L70-L128,93
validation-239,`Deposit#executeDeposit()` expects msg.value but is not marked as payable,,Unsatisfactory,,84
validation-24,`multicall `Function Fails to Reset `isMulticall` Flag on Delegatecall Failure,isMulticall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/Multicall.sol#L27,107
validation-240,Chainlink addresses/intervals should not be immutable,hearbeat,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/oracle/PriceFeed.sol#L84-L94,59
validation-241,Grace period time is too much for after the sequencer comes back up and allows for accumulation of bad debt,,Unsatisfactory,,60
validation-242,Users can front/backrun the updates to the variable rates and still have a relatively lower position for their borrows on the yield curve,frontrun BorrowRate update,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L120-L129,54
validation-243,No slippage checks when withdrawing tokens from the variable pool,slippage withdraw,Unsatisfactory,,66
validation-245,sellCreditMarket only checks openingLimitBorrowCR when opening a new position,position on the edge of liq,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L51-L197,94
validation-246,"Early repay may be front ran, by MEV for profit",,Unsatisfactory,,199
validation-247,Bad tenor validation could lead to buy/sell position's credits at tenor below the limit,"tenor range, relate to validation#522",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L51-L115,143
validation-248,The validateUserIsNotBelowOpeningLimitBorrowCR in withdraw can lead to DOS,too strict CR affect withdraw,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L162,129
validation-249,AToken cap can be violated/bypassed through multicall,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,94
validation-25,"Gas Optimization, Code Readability and Documentation, Security Enhancements, Library Use, Explicit Visibility, Function Modifiers",,Unsatisfactory,,54
validation-250,The user can claim even if the leftover credit is lower than the minimumCreditBorrowAToken.,,Unsatisfactory,,114
validation-251,Lack of Slippage Protection in Limit Orders Allows for Unfavorable Deals via MEV,slippage,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/OfferLibrary.sol#L8-L21,51
validation-252,inconsistency in variable pool liquidity validation,aave liquidity amount exclude fee,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L184, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L194, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L243",54
validation-255,Malicious borrower can prevent liquidations,,Unsatisfactory,,72
validation-257,Liquidator rewards are inflated.,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,127
validation-258,Legitimate call with small cash out can be reverted.,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,170
validation-262,"During liquidation, the higher the collateral ratio is, the more the loss of borrower is. ",liq fee math,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Liquidate.sol#L107-L112,99
validation-263,Lenders calling buyCreditMarket can be front-run by borrowers due to lack of Non-Zero check on minAPR,,Unsatisfactory,,159
validation-264,"Protocol Doesn't Implement Extra Reward Claiming from Aave, leading to a loss of yield","aave reward, seems QA",Unsatisfactory,,31
validation-265,Validation logic in `validateVariablePoolHasEnoughLiquidity()` is inaccurate with the introduction of virtual Accounting in AAVE3.1,aave liquidity check,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L68,50
validation-266,Min/max answers from the chainlink aggregators are not checked,oracle minAnswer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,112
validation-267,Borrower has no control over max loan amount,no borrow upper limit,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L182, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L159-L163",81
validation-268,`CapsLibrary.sol#validateBorrowATokenIncreaseLteDebtTokenDecrease` uses wrong source of `borrowAToken` total supply rendering validation ineffective which allows anyone to bypass cap limit by deposit via `multicall`,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,206
validation-269,[M-1] `Deposit::executeDeposit` uses `address(this).balance` which can lead to unintended financial operations,address(this).balance,Unsatisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Deposit.sol#L71,64
validation-27,Reentrancy Vulnerability in multicall Function,,Unsatisfactory,,20
validation-270,[M-2] Missing Validation for `crOpening` and `crLiquidation` in `UpdateConfig::executeUpdateConfig` could lead to risky parameters,"cr updating validation, relate to validation#421",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/UpdateConfig.sol#L87-L92, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Initialize.sol#L108-L110",50
validation-271,Missing check on loan repayment resulting in free credits,,Unsatisfactory,,56
validation-272,Incorrect computation of liquidator's reward,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,76
validation-278,Executing nested `Multicall::multicall` functions as calldata to `Multicall::multicall` can lead to state inconsistencies and increase the risk of reentrancy attacks.,isMulticall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/Multicall.sol#L27,48
validation-280,borrowATokenCap can be bypassed through multicall(),borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,91
validation-281,"When liquidateWithReplacement is called, the new borrower does not pay the swapFee ",liq miss swap fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L146,93
validation-282,The use of `block.timestamp` in calculating tenors and deadlines can lead to MEV exploitation,,Unsatisfactory,,97
validation-284,"protocol blocks partial repayment, even though they improve borrowers health in certain conditions","allow partial repay for overdued loan, maybe by design",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L51-L53,52
validation-287,Insufficient check when updating crOpening,"cr updating validation, relate to validation#421",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/UpdateConfig.sol#L87-L92, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Initialize.sol#L108-L110",69
validation-288,No mechanism to protect `DebtPositions` that become overdue during Protocol Pause from liquidations,paused cannot repay,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136",33
validation-289,It's possible to swap credit without payng fees ,,Unsatisfactory,,102
validation-290,Insufficient validation of `maxDueDate` presents a risk for lenders allowing unintended 0% APR loans ,maxduedate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditLimit.sol#L42,75
validation-291,Fragmentation fee is not applied during compensate if minting new credit.,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",107
validation-292,Borrower can set openingLimitBorrowCR to max to make BuyCreditMarket order always revert,no loss,Unsatisfactory,,84
validation-294,Borrower Gets Immediately Liquidated After Repayments Resume,paused cannot repay,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136",186
validation-295,Arbitrary `from` passed to `transferFrom` (or `safeTransferFrom`) in DepositTokenLibrary.sol,,Unsatisfactory,,53
validation-296,depositing native eth and usdc in the same multicall will always revert,,Unsatisfactory,,131
validation-297,Incorrect fee calculation in sellCreditMarket,"swap fee, 2 places",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256",149
validation-30,Fixed hearbeat used for price validation is too stale for some tokens,hearbeat,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/oracle/PriceFeed.sol#L84-L94,76
validation-303,Inadequate checks to confirm the correct status of the sequecnce/sequecncerUptimeFeed in `PriceFeed.getPrice()` contract. ,oracle sequecncer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/oracle/PriceFeed.sol#L63-L77,64
validation-305,Incorrect calculation of swapFees in `getCreditAmountIn` function,"swap fee, 2 places",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256",467
validation-306,DoS in BuyCreditMarket() due to incorrect configuration of minimumCreditBorrowAToken,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,87
validation-307,Multicall Failure Due to Concurrent Collateral and Borrow Token Deposits in `Size::deposit(),,Unsatisfactory,,65
validation-308,Users can end up with unwanted debt,same struct order cause unexpected borrow,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L177-L186, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L86-L88",32
validation-309, Users Can Bypass `borrowATokenCap` Check Through `multicall` Due to Incorrect Validation,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,146
validation-31,`latestRoundData()` Call May Result Stale,oracle stale,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L64-L89,37
validation-313,Lack of maxDueDate in borrow offers/limit-orders,,Unsatisfactory,,66
validation-314,Solidity version >= 0.8.20 will not work on Base due to PUSH0,,Unsatisfactory,,28
validation-315,Full liquidations of debt positions risks putting the protocol in bad debt,need partial liquidation,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L70-L128,49
validation-316,Liquidation reward is calculated incorrectly and will always be very low which presents no incentive for liquidators to liquidate underwater/overdue positions,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,128
validation-317,Liquidator minimum profit check can fail when liquidator fails to provide sufficient input,user's own input,Unsatisfactory,,65
validation-318,fragmentationFee in compensate is not implemented correctly,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",70
validation-319,Unexpected reverts or no incentives during liquidation due to wrong liquidatorReward calculation.,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,86
validation-320,Users could abuse `compensate()` to fragment creditPositions without paying any fragementation fee,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",119
validation-321,Lack of slippage control on minimum Borrow amount received can create undesirable debt positions for borrowers ,feature improvement slippage,Unsatisfactory,,69
validation-322,The `borrowAtoken` supply checks in `multicall()` are completely wrong,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,99
validation-323,Incorrect liquidator reward calculation results in significant loss of reward,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,94
validation-324,Incorrect Reward Calculation in `executeLiquidate`,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,145
validation-325,Borrower overpays interest due to incorrect inclusion of fragmentation fee in credit calculation,fragmentation fee double count,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L185,58
validation-326,Hardcoding aave pool address is a serious aave integration flaw because valid pool addresses can change.,hardcode aave addr,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/UpdateConfig.sol#L86,88
validation-327,Incorrect swap fee calculation in SellCreditMarket leads to protocol receiving less than they should,"swap fee, no credit fractionalization",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L249,188
validation-328,Loans are undervalued in `buyCreditMarket()` due to wrong rounding,"rounding direction, could be design choice",Unsatisfactory,,85
validation-329,Borrowers do not pay any swap fees during liquidation with replacement,liq miss swap fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L146,42
validation-330,"Absense of a minCredit amount in limit orders, could expose users to unfavourable or unprofitable matches",feature improvement,Unsatisfactory,,43
validation-331,User funds could get stuck or unexpected reverts could occur,inconsistent fee cash/credit amount in/out,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L185-329,49
validation-332,LiquidatorReward is not properly calculated,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,54
validation-333,Malicious user can DoS other users' deposits,"sandwich to grief, but seems no big loss",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Deposit.sol#L80,85
validation-334,Borrow token supply cap can be bypassed using multicall,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,67
validation-335, Unbounded return data in external calls of `DepositTokenLibrary.sol` of can lead to excessive gas consumption and DoS,,Unsatisfactory,,257
validation-336,"During profitable liquidations, under certain conditions the fee for the protocol can be 0",collateralRemainder math,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L95-L99,83
validation-337,Size overcharges lender and overpays borrower during `sellCreditMarket` calls,unfair fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L201,203
validation-339,Charging more Credit than what it should be really charged to CreditSellers when Selling Credit with a market order for a specific amount of cash.,swap fee getCreditAmountIn SellCreditMarket,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L171-L178,232
validation-34,State Inconsistency Due to Unhandled Revert in `multicall` Function,isMulticall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/Multicall.sol#L27,54
validation-340,Borrowers can fragmentate credit without paying the fragmentationFee when partially repaying a DebtPosition via Compensate,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",122
validation-341,Rounding on profitable liquidations beneffits the Liquidator at the expense of the Borrower and the Protocol,rounding direction liq,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L157,91
validation-342,"SellingCredit can incorrectly reverts because `params.amount` is incorrectly threated as if it would represent `credit`, when in reality could represent `cash` and the credit been sold would be grather than minimumCreditBorrowAToken",minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,53
validation-343,Price feed contract does not check for minAnswer and maxAnswer,oracle minAnswer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,41
validation-344,Incorrect validation to determine if the liquidator receives the requested minimum profit for executing the validation.,user's own input,Unsatisfactory,,91
validation-345,CreditSellers are not charged the swapFee for receiving cash when their SellCredit LimitOrders are filled by a liquidation with replacement,liq miss swap fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L146,57
validation-346,Users can scam other users when they match their loan ,,Unsatisfactory,,116
validation-347,Liquidator's reward are wrongly computed because they are not converted to its value worth in collateral.,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,89
validation-348,Rounding down when computing issuanceValue causes the new borrower to get less cash than what it would get for the same amount of Credit if his borrow offer would have been filled with a BuyCredit MarketOrder.,rounding direction inconsistent liq replacement,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,111
validation-349,CreditBuyers can bring down the CollateralRatio of CreditSellers by generating new loans instead of buying credit from an existing position the CreditSellers put on sale.,feature improvement,Unsatisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L51-L197,27
validation-35,Missing check in `validateMinimumCreditOpening` function,,Unsatisfactory,,31
validation-350,Wrong `liquidatorReward` in a profitable liquidation.,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,80
validation-351,When a creditPosition is transferred to a new lender when calling `compensate` it is not ensured that the creditPosition is forSale,change other user's forSale parameter,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L42,56
validation-352,"In `validateCompensate` there is wrong check that can approve transaction that will make right users not able to compensate, some borrowers to exploit protocol or some lenders not to claim their credit at expected due date",,Unsatisfactory,,68
validation-353,Borrowers pay more credit than necessary due to incorrect calculations,"swap fee, credit fractionalization",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L256,120
validation-354,Borrowers can DoS Lenders from Selling Credit from their Existing CreditPositions by compensating the CreditPosition been sold,frontrun and compensate same CreditPositionId,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L106-L156, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L87-L89, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L165-L173",91
validation-355,Input validation of [repayAmount] in [repayDebt] function,,Unsatisfactory,,43
validation-356,Non-functional Borrowing Mechanism Leads to Debt Accrual Without Fund Transfer,,Unsatisfactory,,304
validation-357,credit positions marked not for sale can be sold. ,"not forsale, miss validation",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L51,91
validation-358,Current liquidation mechanism can cause borrowers with multiple debt positions to lose collateral more than they should,all positions share the same CR,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L53-L64, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L148-L161",198
validation-359,Lenders can be front-runned while disabling forSale flag for a credit position,forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",70
validation-360,Size performs insufficient available liquidity check during `liquidateWithReplacement` calls,liquidation should check liquidatorProfit,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L229-L243,140
validation-361,Minimum credit check can lead to sell credit market dos,"admin change minimumCreditBorrowAToken, relate to validation#454, validation#522",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L93-L95,70
validation-362,Reentrancy Attack is possible.,,Unsatisfactory,,45
validation-363,Incorrect Minimum credit Check in `validateBuyCreditMarket`,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,58
validation-364,"Protocol pausing during market volatility can prevent lenders from self-liquidating debt, potentially leading to significant financial losses.","paused cannot liq, relate to findings#5",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L210-L223,44
validation-365,"The Liquidate::liquidatorProfitCollateralToken function currently over-rewards liquidators due to combining collateral and borrow tokens, resulting in consistently high liquidator reward.",liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,70
validation-367,Deposits of underlying borrow token via multicall can go above the cap,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,97
validation-368,"The `validateVariablePoolHasEnoughLiquidity()` check can be bypassed, giving certain users an unfair advantage",sandwich aave pool,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L67-L72,101
validation-369,Ability to change the apr of the curve any time allow lenders and borrower to front run the actions.,sandwich change apr,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/token/NonTransferrableScaledToken.sol#L123-L124, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Repay.sol#L50-L51, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Claim.sol#L52-L56",63
validation-37,The total supply of borrowAToken can go over the specified cap,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,118
validation-370,"The `BuyCreditLimit::validateBuyCreditLimit` method incorrectly uses `minTenor` instead of `maxTenor`, potentially allowing `LoanOffer` creation that exceeds the maximum due date.",maxduedate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditLimit.sol#L42,40
validation-371,Users may incur an unexpected fragmentation fee in the `compensate()`  call,"frontrun borrower's compensate(), lead to unexpedted fragmentation fee. Some issue about compensate flow, the fee should be consistent for different orders of actions.",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L146-L155",129
validation-373,Centralization Risk in Role Management,,Unsatisfactory,,45
validation-374,Report on `CreateInitCodeSizeLimit` Issue and Potential Optimizations for the Size Protocol,,Unsatisfactory,,170
validation-375,Lender always can DoS a Lender trying to exit credit early.,frontrun DOS early exit buying minimum,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L87,106
validation-377,Protocol fails to take fragmentation fee during credit fractionalization for every compensate call with params.creditPositionToCompensateId == RESERVED_ID.,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",232
validation-378,Compensations can be used to artificially make a position overdue and avoid a larger protocol fee during liquidations under certain conditions,"compensate to switch from underwater to overdue loan, skip fee",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L76-L77,203
validation-38,"Borrowers can partially pay back and leave a small borrowing amount in their position, leading to the protocol's bad debt",liq unprofitable,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L100,52
validation-380,"Compensate can be used to dump ""unwanted"" positions on unsuspecting lenders",some lenders could get unwanted position. Maybe expected behavior.,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L139-L144,98
validation-383,Unchecked External Call in Multicall Function,,Unsatisfactory,,49
validation-384,No storage gap for upgradeable contracts,QA,Unsatisfactory,,43
validation-385,"The `validateBorrowATokenCap()` restriction in `deposit()` can be easily bypassed by wrapping it in a `multicall()` call, giving certain users an unfair advantage",borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,94
validation-388,Users cant withdraw borrowATokens if they are under the opening collateral limit,too strict CR affect withdraw,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L162,45
validation-389,Malicious actors can do block stuffing and liquidate a debt to profit when repayment is close to the dueDate timestamp.,"block stuffing to liquidate, but only if the user repay at last minute",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L198-L201",25
validation-39,SizeStorage:Corruptible Upgradability Pattern in State structs,,Unsatisfactory,,55
validation-390,borrower that get matched through `liquidateWithReplacement()` will unfairly get more Cash than he should.,liq miss swap fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L146,73
validation-391,Liquidator reward is incorrectly calculated during liquidation,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,116
validation-392,Fragmentation fee can be avoided during debt compensation,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",223
validation-393,Borrow offer can be used more than once to significantly decrease borrower collateral ratio,,Unsatisfactory,,57
validation-394,manipulate rates of aave based rates,,Unsatisfactory,,17
validation-395,Insufficient validation of an Oracle data feed,oracle stale,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L64-L89,50
validation-396,"`Deposit` function allows blacklisted addresses to receive tokens and open positions, bypassing underlying token restrictions",,Unsatisfactory,,331
validation-40,Incorrect Liquidation Logic Leading to Potential Financial Discrepancies and Unauthorized Access,,Unsatisfactory,,224
validation-403,Creation of valid loans will revert due to comparing a cash value with credit one,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,245
validation-404,Protocol swap fees accidentally sent to lender instead of the protocol due to wrong fees calculation in SellCreditMarket.,"swap fee, 2 places",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256",187
validation-405,Lenders might capitalize on more borrow token that they're entitled to during significant liquidity index changes,sandwich liquidityindex,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L67-L72,57
validation-406,Users can skip the fragmentation fee through the `compensate()` action,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",157
validation-407,Normal `Liquidate` action incentives are too low due to decimals misshandling,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,77
validation-408,Arbitrary `from` passed to `transferFrom` (or `safeTransferFrom`) in Liquidate.sol,,Unsatisfactory,,43
validation-409,There's no liquidation incentive for small positions which can lead to the accrual of bad debt,liq unprofitable,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L100,39
validation-411,Findings Report for Self-Liquidation Vulnerability in SelfLiquidate.sol,,Unsatisfactory,,36
validation-412,Liquidator reward is not calculated correctly,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,114
validation-413,Credit seller(lender early exit) could be instead made to borrow unexpectedly due to offer being the same as borrower's offer.,same struct order cause unexpected borrow,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L177-L186, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L86-L88",91
validation-414,Incorrect cashAmount check for variable pool ability to fulfill withdrawal,aave liquidity amount exclude fee,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L184, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L194, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L243",68
validation-416,incorrect check for cash against credit makes check redundant,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,35
validation-419,Liquidator cannot achieve proper liquidator reward as protocol promised,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,62
validation-42,Liquidators will never profit from liquidations,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,144
validation-421,Incomplete check to protect credit sellers in sellCreditMarket,sell between lenders won't maintain APR range,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L116-L118,37
validation-423,No check that the variable pool balance is greater than the amount of cash being transferred ,,Unsatisfactory,,39
validation-424,Unauthorized Token Transfer Risk in SellCreditMarket.sol,,Unsatisfactory,,38
validation-425,legitimate selfLiquidate can be stopped by users looking to earn liquidation profit,,Unsatisfactory,,44
validation-426,Wrong calculations causes the borrowers to owe more credit than necessary,swap fee netCashAmountIn,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L294,130
validation-427,H-3: Inability to Withdraw ETH in Size.sol ,,Unsatisfactory,,21
validation-428,Inability to Withdraw ETH in Size.sol ,,Unsatisfactory,,54
validation-429,Loss of funds for protocol as incorrect rounding is implemented,rounding direction liq,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L157,26
validation-430,Liquidator can take away protocol's earn during liquidation with replacement borrower.,liq choose arbitrary borrower,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L120-L164,85
validation-431,Incorrect validation to determine liquidatorReward ,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,28
validation-432,`Fees` is calculated wrongly in `AccountingLibrary.sol#getCreditAmountIn()` function.,"swap fee, 2 places",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256",143
validation-433,Missing Return Statement in approve Function of NonTransferrableToken.sol,,Unsatisfactory,,34
validation-434,Liquidation and Self-Liquidation functions could be paused by Owner and lead to user loss of funds if their collateral value is dropping within that period ,,Unsatisfactory,,21
validation-435,Centralization Risk for Trusted Owners in Size.sol,,Unsatisfactory,,71
validation-436,Centralization Risk for trusted owners in NonTransferrableScaledToken.sol,,Unsatisfactory,,57
validation-437,Centralization Risk for trusted owners in NonTransferrableToken.sol,,Unsatisfactory,,21
validation-438,Overdue loans can't be partially repaid using `compensate`,"allow partial repay for overdued loan, maybe by design",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L51-L53,98
validation-439,Users can not compensate with `creditPositionToCompensateId = RESERVED_ID` at the end of the loan,expected behavior,Unsatisfactory,,51
validation-44,Wrong calculation of `fees` in `SellCreditMarket` when `params.exactAmountIn == false` and `params.creditPositionId == RESERVED_ID`,"swap fee, 2 places",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256",117
validation-440,still possible to take loans amounts below the riskConfig.minimumCreditBorrowAToken,LiquidateWithReplacement() break minimumCreditBorrowAToken limit,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L120,171
validation-441,Lenders must have valid BorrowOffer in order to sell their credit positions,"same struct order cause unexpected borrow, maybe partial, POC not quite specific",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L177-L186, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L86-L88",72
validation-442,Using `ERC721::_mint()` can be dangerous in NonTransferrableToken.sol,,Unsatisfactory,,44
validation-443,The new borrower in `LiquidateWithReplacement` is not charged swapping fee,liq miss swap fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L146,47
validation-444, Using ERC721::\_mint() Can Be Dangerous in NonTransferrableToken.sol,,Unsatisfactory,,38
validation-445,Wrong calculation of `fees` in `SellCreditMarket` when `params.exactAmountIn == false` and `params.creditPositionId != RESERVED_ID`,"swap fee, credit fractionalization",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L256,104
validation-448,Updating `crOpening` can block existing users from withdrawing,"cr updating validation, relate to validation#421",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/UpdateConfig.sol#L87-L92, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Initialize.sol#L108-L110",59
validation-449,Wrong low and high tenors  (values in the x axis) are used to calculate the final apr,"(high,low) or (low,high)",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/YieldCurveLibrary.sol#L115-L143, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/Math.sol#L51-L68",73
validation-450,Lender cannot do exactAmountIn in case of buyCreditMarketOrder and seller cannot do cashAmountOut  in case of sellCreditMarketOrder,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,77
validation-451,Liquidator Reward is calculated wrong due to incorrect comparison- Liquidation.sol,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,70
validation-452,Lender/SelfLiquidator receives less collateral from borrower than expected.,,Unsatisfactory,,71
validation-453,Borrower cannot save himself from liquidation by paying partial debt - Compensate.sol,"allow partial repay for overdued loan, maybe by design",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L51-L53,54
validation-454,Updated tenor range is not being used to validate before creating new credit-debt Position. - Buy/SellCreditMarketOrder and Compensate,"tenor range, relate to validation#522",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L51-L115,83
validation-455,Lender is not allowed to take calculated Risk to avoid a huge selfLiquidation Loss - Buy/SellCreditMarketOrder,no significant loss,Unsatisfactory,,82
validation-456,Fragmentation Fee is not properly enforced on all credit splits during compensation,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",120
validation-457,Grief the Protocol by filling all the debtPosition and creditPosition slots available without  facing any loss to the attacker - Compensate.sol,fragmentation gas DOS liq,Satisfactory,https://github.com/SizeCredit/size-solidity/blob/fbfe6aa84c2a3ef1ded776cda7a079542a3cdef8/src/libraries/actions/Compensate.sol#L105-L173,49
validation-458,Volatile cap on borrowOffers can lead to borrowers incurring more debt than expected,,Unsatisfactory,,63
validation-459,Liquidator will be grieved if he provides minimumCollateralProfit as 0.,user's own input,Unsatisfactory,,89
validation-46,Incorrect calculation of liquidator reward in Liquidate.sol leads to failed liquidations,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,106
validation-460,MaxDueDate of the LoanOffer is not checked while an existing creditPosition is bought-  BuyCreditMarket,maxduedate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditLimit.sol#L42,87
validation-461,Incorrect calculation of fees lead to protocols Loss - sellCreditMarketOrder.,"swap fee, POC not quite clear",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L228-L263,90
validation-462,Seller/Borrower is grieved by making him pay the swapFee for the fragmentionFees that goes to the protocol. - SellCreditMarketOrder.,"flawed swap fee logic, borrower is paying the swapFees for fragmentationFees too which is destined to go to the protocol",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L127-L203, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L185-L217",135
validation-463,Borrower can take the accrued Interest from the AAVE pool which is deserved by the thelender.,,Unsatisfactory,,74
validation-464,`liquidate()` doesn't have a deadline parameter makes it susceptible to MEV manipulation,no loss,Unsatisfactory,,42
validation-465,DOS of  liquidateWithReplacement becuase issuance value might round to zero due to low apr and low tenor ,liq profit rounding to 0,Unsatisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L146-L148,41
validation-466,Fragmentation Fee not charged when a user incompletely compensate a credit position,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",68
validation-467,Setting `baseStalePriceInterval` and `quoteStalePriceInterval` as immutable possesses a risk,hearbeat,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/oracle/PriceFeed.sol#L84-L94,27
validation-468,Pausing Prevents Closure and Liquidation of Outstanding Loan ,paused cannot repay,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136",25
validation-469,Protocol Fee isn't collected in liquidate with replacement,liq miss swap fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L146,53
validation-47,DoS on market order with `creditPositionId != RESERVED_ID` by front-run compensating the credit position with `creditPositionToCompensateId = RESERVED_ID` and `amount = type(uint256).max`,,Unsatisfactory,,88
validation-471,"Attackers can steal repaid funds, by manipulating the ""liquidityIndex"".",sandwich liquidityindex,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L67-L72,142
validation-472,Usage of an incorrect version of Ownable library ,,Unsatisfactory,,25
validation-473,Incorrect logic to protect Size from large amount of loans,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,54
validation-474,Malicious lender can take over other lender's position,forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",133
validation-475,"Users can pay less fees for the same amount of cash, protocol losses expected income","swap fee, 3 places",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L228, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256",434
validation-476,`_getPrice()` doesn’t check for the `min`/`max` prices returned,oracle minAnswer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,46
validation-477,Every borrower in Size can block the keeper from choosing them as a replacement borrower,expected behavior,Unsatisfactory,,63
validation-480,`liquidatorReward` computation use `debtPosition.futureValue` in place of `debtInCollateralToken` in `Liquidate.sol`,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,93
validation-481,An attacker can force a sellCreditMarket/buyCreditMarket call to match with a non-optimal offer by front-running the victim,frontrun to change apr,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditLimit.sol#L57, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditLimit.sol#L29",101
validation-482,`validateSellCreditMarket` may revert incorrectly when `params.amount` is used as `cashAmountOut/In` value (`exactAmountIn == false`,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,101
validation-483,`validateBuyCreditMarket` may revert incorrectly when `params.amount` is used as `cashAmountIn` value (`exactAmountIn == true`),minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,101
validation-484,`liquidatorReward` calculation is not correct,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,153
validation-485,"Partial repayment with debt/credit creation (compensation) will not charge fragmentation fee, allowing malicious actors to fragment a credit many times breaking invariant `FEES_01`",fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",148
validation-487,the user can be frontrunned and forcefully liquidated,,Unsatisfactory,,36
validation-488,Lenders can steal money from borrowers when market conditions are very volatile.,expected behavior,Unsatisfactory,,100
validation-489,aave pool not integrated correctly ,hardcode aave addr,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/UpdateConfig.sol#L86,35
validation-49,"This vulnerability can lead to unauthorized configuration changes, potentially resulting in significant security and operational risks.",,Unsatisfactory,,46
validation-490,anyone can compensate with different token,,Unsatisfactory,,24
validation-491,anyone can repay with a different token,,Unsatisfactory,,23
validation-492,Borrower can make liquidation unprofitable for legitimate loans,future value is not accurate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/LoanLibrary.sol#L148-L161,59
validation-493,Borrower can make liquidation unprofitable for legitimate loans,future value is not accurate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/LoanLibrary.sol#L148-L161,59
validation-494,Aave Yield on Lender Credit Repayment Vulnerable to Griefing,"claim() access control, lender may lose aave yield",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Claim.sol#L48-L59, https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L204-L207",122
validation-495,repay does not transfer excess,,Unsatisfactory,,26
validation-496,Incorrect Compensate Event Emission,QA,Unsatisfactory,,76
validation-497,Incorrect Overdue Liquidation Protocol Fees Calculation,liq collateralRemainderCap,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L107-L108,168
validation-498,Inability to Compensate Positions with Less Than 1 Hour Remaining,,Unsatisfactory,,62
validation-499,Inability to Compensate Positions with Less Than 1 Hour Remaining,,Unsatisfactory,,62
validation-500,Inability to Compensate Positions with Less Than 1 Hour Remaining,design choice,Unsatisfactory,,62
validation-501,Borrower can make liquidation unprofitable for legitimate loans,future value is not accurate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/LoanLibrary.sol#L148-L161,59
validation-502,Borrower can make liquidation unprofitable for legitimate loans,future value is not accurate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/LoanLibrary.sol#L148-L161,59
validation-503,Ordinary liquidations can become unprofitable as expiration time cannot be set,"time sensitive liq, but maybe feature improvement",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L37-L54, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L18-L23",93
validation-504,Valid market lending and borrowing can be denied as `exactAmountIn` value is ignored in controls,validation exactAmountIn,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L90-L93,48
validation-505,"Due to wrong calculation of liquidator Reward, unexpected financial Loss of Protocol fee Recipient and Borrower is happening during Liquidation.",liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,92
validation-508,isMultiCall boolean value can be easily manipulated,isMulticall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/Multicall.sol#L27,79
validation-510,"The accidental input of `state.data.underlyingBorrowToken.decimals()` instead of `state.data.underlyingCollateralToken.decimals()` in the `AccountingLibrary::debtTokenAmountToCollateralTokenAmount` function leads to unprofitable liquidations being mistakenly counted as profitable, causing the protocol to charge fees incorrectly and disrupting the liquidation process.",,Unsatisfactory,,91
validation-511,`LiquidateWithReplacement` function allows USDC blacklisted addresses to circumvent token-level restrictions through the Size protocol,,Unsatisfactory,,358
validation-512,"Inside Multicall, wrong parameters passed into state.validateBorrowATokenIncreaseLteDebtTokenDecrease allows for unintended behaviour where total supply of borrowAtokens exceed borrowATokenCap despite not being for the purpose of decreasing debt",borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,63
validation-513,"The borrowAToken's scaling mechanism in `NonTransferrableScaledToken::transferFrom` by the LiquidityIndex through `getReserveNormalizedIncome`, introduces variability in token values via division or multiplication of the liquidity index, potentially affecting yield calculations within protocols.",,Unsatisfactory,,98
validation-514,Incorrect Handling of Decimal Places in Liquidation Reward Calculation,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,112
validation-515,Inability to Update Aave Variable Pool Address in Configuration Update Function,hardcode aave addr,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/UpdateConfig.sol#L86,50
validation-516,H-01 buyCreditMarket() results in a lender losing funds due to buying a portion of a small credit,"slippage protection is needed, small loan suffer from fees",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L156-L177, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L274-L301",85
validation-517,User Unable To Partially Repay Debt To Avoid Liquidation,"allow partial repay for overdued loan, maybe by design",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L51-L53,94
validation-520,Liquidators can steal borrowers collateral tokens due to wrong assumption.,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,45
validation-521,Incorrect Handling of Cash Amount Validation in BuyCreditMarket Function,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,48
validation-522,Lenders can cause a loss for Borrowers when they sell their credit positions,sell between lenders won't maintain APR range,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L127-L204,127
validation-523,The `borrowATokenCap` will be reached earlier than expected,borrowATokenCap logic,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L52-L58,51
validation-525,Overdue or underwater positions may become unliquidatable if there are not enough borrowATokens to repay lenders.,paused cannot repay,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136",87
validation-527,borrowers can't use some credit positions to compensate their debt positions,minmumCollateral affects compensate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L132-L134,77
validation-528,Certain configurations of liquidationRewardPercent could disincentivize liquidators,expected behavior,Unsatisfactory,,51
validation-531,Liquidate & Self-Liquidate Should Have 100% Uptime,"paused cannot liq, relate to findings#5",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L210-L223,48
validation-532,APR Calculation is Favoring the Borrower Instead of the Lender,no impact description,Unsatisfactory,,30
validation-533,Protocol Profits Should Round in Favor of the Protocol and Not the Liquidated Borrower,rounding direction liq,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L157,31
validation-534,"Users Can Place Offers That Are Never Collateralized, Leading to Many Dirty Orders in the Order Book",feature improvement,Unsatisfactory,,88
validation-535,"Loan and Borrow Offers Are Not Being Reset After the User Deposit Has Been Used, Leaving Stale Orders on the Order Book.",feature improvement,Unsatisfactory,,93
validation-536,"When both `low` and `high` are large enough value, overflow will occur",,Unsatisfactory,,37
validation-538,"When `sellCreditMarket()` is called to sell credit for a specific cash amount, the protocol might receive a lower swapping fee than expected.","swap fee, 2 places",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256",213
validation-540,Incorrect calculation of liquidation rewards results in all liquidations being profitless,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,122
validation-541,Lenders are not getting interest from AAVE when claiming,"seems misunderstanding, when the loan is borrowed, it is no longer at AAVE",Unsatisfactory,,102
validation-542,The `borrowATokenCap` limitation can be bypassed by depositing `USDC` through `Size#multicall()`,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,76
validation-543,Incorrect address was used to check whether the variable pool has enough liquidity ,aave liquidity check,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L68,61
validation-544,Neither `sellCreditMarket‎()` nor `compensate‎()` checks whether the credit position to be sold is allowed for sale,"not forsale, miss validation",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L51,269
validation-545,DoS when trying to access the newly created debit & credit position,,Unsatisfactory,,124
validation-546,All transactions in which CapsLibrary::validateVariablePoolHasEnoughLiquidity is called revert,aave liquidity check,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L68,35
validation-547,`getCreditAmountIn` returns lower fees than expected,creditAmountIn,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L250-L257,59
validation-548,"`SellCreditLimit` function allows blacklisted addresses to create borrow offers, bypassing USDC restrictions",,Unsatisfactory,,335
validation-550,AccountingLibrary::getCreditAmountIn ensures that borrowers end up paying more for fragmentation than specified in fee config ,fragmentation fee double count,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L185,59
validation-551,Wrong liquidity checking lead to token being stuck,aave liquidity check,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L68,91
validation-552,It doesn't validate `variablePoolBorrowRateStaleRateInterval` when `Size#updateConfig()` is called to update `variablePoolBorrowRateStaleRateInterval`,,Unsatisfactory,,139
validation-554,Decimal error in calculation of the liquidator's reward,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,89
validation-555, Uncharged Fragmentation Fees on Credit Splits on `Compnsate()` function Lead to Financial Losses for the Protocol,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",125
validation-556,`borrowATokenCap` can be avoided by using the `Multicall` function,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,85
validation-557,No Incentive for Liquidation Due to Incorrect Calculation of Liquidator Rewards,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,116
validation-558,"Liquidator reward is calculated wrongly, causing it to be extremely low, not incentivising for liquidations to be made",liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,52
validation-559,Incorrect Liquidity Check in Variable Pool Disrupts Borrowing Operations,aave liquidity check,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L68,107
validation-561,`validateVariablePoolHasEnoughLiquidity`'s checking condition can be bypassed.,sandwich aave pool,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L67-L72,39
validation-562,Incorrect Validation of `Amount` in `sellCreditMarket` and `buyCreditMarket` Functions Causes A Revert On Valid Inputs,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,99
validation-563,Frontrunning risk for `setUserConfiguration` function for very profitable CreditPositions,forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",33
validation-564,Borrower are not able to repay debt when protocol is paused.,paused cannot repay,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136",29
validation-565,worng calculation of creditAmountIn in `sellCreditMarket` gives the borrower less `cashOut`,creditAmountIn,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L250-L257,157
validation-566,Unprofitable Liquidation for Small Loans Leads to Bad Debt,liq unprofitable,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L100,80
validation-567,"when a borrow Order is filled via Size::liquidateWithReplacement, the borrower does not end up paying for swap fees",liq miss swap fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L146,22
validation-568,Incorrect calculation for liquidatorReward in executeLiquidate function,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,88
validation-569,`liquidatorProfitBorrowToken` send to wrong address,,Unsatisfactory,,46
validation-570,There is a discrepancy in which party pays the fragmentation fee depending on whether buyMarketCredit or sellMarketCredit is used,"fragmentation fee from borrower or lender, findings #11",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditMarket.sol#L202,144
validation-571,Lack of function `claimReward()` to claim reward,"aave reward, seems QA",Unsatisfactory,,34
validation-572,Lenders can set extremely high interest rate on loans. ,,Unsatisfactory,,70
validation-574,borrowATokenCap can be exceeded without adding value to the protocol.,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,97
validation-575,minTenor check in validateCompensate() will DOS loan compensation,expected behavior,Unsatisfactory,,54
validation-576,Liquidators can prevent users from making their positions healthy during an unpause.,paused cannot repay,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136",39
validation-578,Incorrect validation in Size.sol causes unexpected reverts,aave liquidity amount exclude fee,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L184, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L194, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L243",31
validation-579,"Credit positions can be bought instantly, which may lead to lenders losing funds",forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",127
validation-580,H-02 createDebtAndCreditPositions() and createCreditPosition() may result in backrunning exploit of user's loanOffer,forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",100
validation-581,Chainlink's `latestRoundData` Might Return Stale Results,oracle stale,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L64-L89,37
validation-582,Liquidator reward is calculated wrongly ,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,69
validation-584,`liquidatorReward` calculated incorrectly resulting in liquidator receiving dust fees,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,114
validation-585,Liquidator receives a dust amount as a reward due to an incorrect calculation of the liquidatorProfitCollateralToken,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,75
validation-586,"Some liquidations are not properly incentivized due to gas prices exceeding liquidation rewards, especially on Ethereum mainnet",QA,Unsatisfactory,,91
validation-587,Inaccurate Liquidatability Assessment Due to Omission of Protocol Fees,no significant loss,Unsatisfactory,,80
validation-588,"Borrowers who call `compensate()` with `RESERVED_ID` will never pay a fragmentation fee, despite being responsible for the fragmentation of credit",fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",134
validation-590,Users Can Steal ETH Balance with Minimum Investment,address(this).balance,Unsatisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Deposit.sol#L71,65
validation-592,Borrowers pay more credit than necessary,swap fee math,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L177,67
validation-593,Through `liquidateWithReplacement` a borrower can avoid paying swap fees,liq miss swap fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L146,37
validation-594,Incorrect ```liquidatorReward``` calculation due to using ```debtPosition.futureValue``` instead of ```debtInCollateralToken```.,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,59
validation-595,"Incomplete validation check in the [Claim::executeClaim], a lender can claim a token before its duedate of repayment without the borrower acknowledgement/approval",,Unsatisfactory,,65
validation-596,Malicious user can DoS every deposit of ```USDC``` at no cost by sandwiching it to not passing ```validateBorrowATokenCap``` check.,"sandwich to grief, but seems no big loss",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Deposit.sol#L80,63
validation-598,```validateVariablePoolHasEnoughLiquidity``` will always revert due to ```balanceOf``` check on wrong address,aave liquidity check,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L68,113
validation-599,Credit positions with cash less than ```minimumCreditBorrowAToken``` and credit more than ```minimumCreditBorrowAToken``` will not be created while they should,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,57
validation-600, Missing check for zero value of msg.value can cause a DoS attack on the deposit function,,Unsatisfactory,,35
validation-601,Users can not deposit and repay their loans if the contract is paused leading to unintended and uncontrollable overdue liquidations,paused cannot repay,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L113, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/LoanLibrary.sol#L135-L136",37
validation-602,Users can not withdraw and use their borrowed USDC tokens if their collateral ratio is below openingLimitBorrow CR,too strict CR affect withdraw,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L162,30
validation-603,Users can not delete a BorrowOffer while the protocol is paused leading to an unwanted loans when the protocol continues operating which he will have to pay fees for.,paused cannot delete order,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L166-L172,35
validation-604,Anyone can bypass ```validateBorrowATokenCap``` check and deposit over the limit calling ```deposit()``` from multicall,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,112
validation-606,Wrong fee calculation when user sells his full ```CreditPosition``` calling ```sellCreditMarket()``` with ```exactAmountIn``` as false,"swap fee, no credit fractionalization",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L249,153
validation-607,Fees are not taken from the issuanceValue in the liquidateWithReplacement function.,liq miss swap fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/LiquidateWithReplacement.sol#L146,71
validation-608,Incorrect ```creditAmountIn``` calculation in ```getCreditAmountIn``` function when users sells a portion of their ```CreditPosition```,creditAmountIn,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L250-L257,110
validation-609,Liquidate doesn't always increase the sender collaterals as per LIQUIDATE_01 invariant,"partial liquidation, relate to validation#315",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L210-L220,58
validation-610, Malicious lenders can create buy credit limit orders without depositing any tokens into the protocol.,,Unsatisfactory,,60
validation-611,"`executeLiquidateWithReplacement` rounds in the wrong direction, breaking an invariant",rounding direction inconsistent liq replacement,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L146,31
validation-612,profit margin when liquidating small positions might not be enough to cover liquidator costs ,liq unprofitable,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L100,37
validation-613,Impact of Variable Pool (Aave v3) Failures on Size Protocol's Liquidation Process,,Unsatisfactory,,41
validation-615,`Multicall` Out-of-Gas Exploitation Enables Front-Running Attacks on Critical Protocol Functions and Can Cause Loss Of Funds,,Unsatisfactory,,331
validation-616, Mishandling of ETH in the [Liquidate::executeLiquidateWithReplacement] can lead to accounting error and siphoning of fund by malicious user,,Unsatisfactory,,33
validation-617,Potential APR Manipulation and Variability Issues in `BuyCreditMarket` function,need apr cap,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L101,80
validation-620,Post-execution validations in `size.buyCreditMarket()` could lead to DoS/State-Inconsistencies ,,Unsatisfactory,,107
validation-622,"Users are able to split their debt position at no cost, allowing them to delay or even prevent liquidation",fragmentation fee RESERVED_ID,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L136-L146,38
validation-623,AccountingLibrary's `getCreditAmountIn()` overstates `creditAmountIn` for the given `cashAmountOut`,creditAmountIn,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L250-L257,63
validation-625,Chainlink price feed will return the wrong price for USDC if underlying aggregator hits minAnswer,oracle minAnswer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,42
validation-626,Risk can be transferred forcefully to unwilling risk takers(borrowers who wants USDC).,paused cannot withdraw,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L178-L195,61
validation-627,"The decimals precision of the `priceFeed` is not handled in `collateralRatio()`, leading to potential wrong valuation ","oracle decimal, seems wrong, need to double check the math",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/RiskLibrary.sol#L53-L64,68
validation-628,Lack of Slippage Protection in `size.buyCreditMarket()` and `size.sellCreditMarket()` ,slippage,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L121, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L127",123
validation-629,Risk of Overpayment Due to Race Condition Between repay and liquidateWithReplacement Transactions,repay for other user after liquidation,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L229,102
validation-630,`isDebtPositionLiquidatable` doesn't account for fees,no significant loss,Unsatisfactory,,75
validation-631,Borrow Token Withdrawals Blocked Due to Incorrect Opening Collateral Ratio Check,too strict CR affect withdraw,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L162,92
validation-633,Possible Re-Entrancy in `repay::executearepay` leading to exploitable cases by a malicious user,,Unsatisfactory,,85
validation-634,Possible Re-Entrancy in `repay::executearepay` leading to exploitable cases by a malicious user,,Unsatisfactory,,85
validation-635,Invalid validation in `UpdateConfig.sol` prevents the swap fee apr from being more than the minimum,maxTenor or minTenor,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/UpdateConfig.sol#L119,40
validation-639,Withdrawal can fail even if user is not underwater,too strict CR affect withdraw,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L162,44
validation-64, Reentrancy Vulnerability in executeLiquidateWithReplacement Function,,Unsatisfactory,,344
validation-642,`validateVariablePoolHasEnoughLiquidity` will always fail causing complete DOS to the protocol,aave liquidity check,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L68,63
validation-643,Market Fees Calculation Issue,inconsistent fee cash/credit amount in/out,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L185-329,1050
validation-644,Incorrect Credit Position Update in `CreateCreditPosition` Function,"feature improvement, extra validation, but users can do themselves",Unsatisfactory,,56
validation-645,Incorrect Validation of BuyCreditMarket,,Unsatisfactory,,81
validation-646,Missing Validation for `maxDueDate` Exceeding Maximum Tenor in `BuyCreditLimit` Library,maxduedate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditLimit.sol#L42,61
validation-647,Lack of circuit-breaker check in `PriceFeed.sol`,oracle minAnswer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,57
validation-648,`maxDueDate` is not checked against the `block.timestamp + state.riskConfig.maxTenor` value,maxduedate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditLimit.sol#L42,67
validation-65,Invalid comparison when computing the liquidator's reward in `executeLiquidate`,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,153
validation-651,Oracle will return wrong price if price goes out of chainlink's minanswer/maxanswer,oracle minAnswer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,23
validation-652,Inability to Compensate Debt with Credit of Equal Due Date,no significant loss,Unsatisfactory,,56
validation-653,The `validateBorrowATokenIncreaseLteDebtTokenDecrease` is incorrect and can be easily bypassed,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L27,35
validation-654,Persistent Zero Profit for Protocol in Liquidation Events under Specific Market Conditions,,Unsatisfactory,,107
validation-655,The [selfLiquidate::executeSelfLiquidate] is missing a step to account for transferring collateral to the lender and any other entity after self Liquidation,,Unsatisfactory,,43
validation-656,Debt Token Repayment Mechanism Allows Users to Exploit USDC Depreciation,,Unsatisfactory,,47
validation-657,Credit can be sold forcibly as `forSale` setting can be ignored via Compensate,forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",99
validation-658,"`borrowOffer` can be replaced by calling `sellCreditLimit`, so that `buyCreditMarket` and `LiquidateWithReplacement` can be bypassed.","temporary DOS liq, but when price drops fast, it could lead to loss",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/SellCreditLimit.sol#L45, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/LiquidateWithReplacement.sol#L72-L74",192
validation-659,Overdue fees potentially penalize collateralization,liq penalty mechanism,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L103-L112,42
validation-66,Inconsistent fees in `sellCreditMarket` when passing amount as credit or cash,"swap fee, 2 places",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L249, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L256",194
validation-662,`NonTransferrableScaledToken` uses wrong unscaled calculation.,,Unsatisfactory,,46
validation-663,Inconsistent ETH Balance Handling in Multicall Deposits,bot report,Unsatisfactory,,109
validation-664,When calculating `creditAmountIn` and `creditAmountOut` the `interest rate` is applied on top of the `fragmentationFee`,fragmentation fee double count,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L185,68
validation-665,Incorrect Fee Calculation in Credit Fractionalization Scenario,fragmentation fee double count,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L185,105
validation-666,Incorrect ETH Deposit Amount Calculation in Deposit Library,bot report,Unsatisfactory,,96
validation-667,Round Completeness Check Omission in PriceFeed Contract,oracle stale,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L64-L89,66
validation-668,Unchecked Maximum Slippage in Liquidation Exposes Protocol to Market Manipulation and Disproportionate Gains for Whales,,Unsatisfactory,,78
validation-669,Lack of Slippage Protection in Deposit Functions,slippage deposit,Unsatisfactory,,94
validation-670,Insufficient ETH handling in `executeDeposit` Function,bot report,Unsatisfactory,,72
validation-671,PriceFeed contract fails to handle Chainlink aggregator minAnswer/maxAnswer thresholds,oracle minAnswer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,52
validation-672,No storage gaps in `SizeView.sol`,QA,Unsatisfactory,,23
validation-673,Any one can call `Size.claim` function thus depriving the lender of extra interest accrual,"claim() access control, lender may lose aave yield",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Claim.sol#L48-L59, https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L204-L207",57
validation-674,Insufficient Handling of Deviation Threshold for ETH/USD Price Feed on BASE L2,,Unsatisfactory,,114
validation-675,Potential Misconfiguration of PriceFeed Contract on BASE Mainnet L2,hearbeat,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/oracle/PriceFeed.sol#L84-L94,96
validation-676,Incorrect APR Calculation for Exact Tenor Matches in Yield Curve Interpolation,,Unsatisfactory,,71
validation-677,Delegatecall Vulnerability in Multicall Implementation,,Unsatisfactory,,71
validation-678,No Storage Gap for Upgradeable Contract Might Lead to Storage Slot Collision,QA,Unsatisfactory,,29
validation-679,borrowers face a loss when selling or buying credit by market,inconsistent fee cash/credit amount in/out,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L185-329,115
validation-68,Current design of the system makes it very hard for certain users to not get fragmented,"feature improvement, no big loss",Unsatisfactory,,125
validation-680,Precision Loss in Scaled Token Burns Due to Incorrect Rounding,,Unsatisfactory,,55
validation-682,Reorg Vulnerability in Contract Initialization Process,,Unsatisfactory,,111
validation-683,Lack of slippage control in market operations,slippage,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L121, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L127",141
validation-684,Inconsisstency in the way `sellCreditMarket()` and `buyCreditMarket()` handels the `validateVariablePoolHasEnoughLiquidity()` check,aave liquidity amount exclude fee,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L184, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L194, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L243",71
validation-685,Whales can force overDue liquidation via block stuffing,,Unsatisfactory,,59
validation-686,SellCreditMarket's incorrect maximum cash amount and credit calculations impose hidden fees on the borrower,swap fee getCreditAmountIn SellCreditMarket,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L171-L178,116
validation-688,Liquidations can't be profitable due to wrong decimals used in `executeLiquidate()`,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,52
validation-689,Vulnerabilities in Borrowing Mechanism Due to Limit Orders Not Cleared When Borrower Reaches Max Borrow Limit,,Unsatisfactory,,42
validation-690,DOS possible when selling credit through market,"< or <=, but seems no big loss",Unsatisfactory,,30
validation-691,lender can not liquidate self even though loan is overdue unless borrower's debt position is not underwater. ,"cannot self liq if overdue, maybe by design",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/RiskLibrary.sol#L80-L81,54
validation-693,Inflexibility in Adjusting `crLiquidation` Value in Smart Contract Settings,design choice,Unsatisfactory,,37
validation-694,The `SwapFee`  is accounted twice in the `AccountingLibrary.getCreditAmountIn` function,fragmentation fee double count,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L185,69
validation-695,Multicall does not work as intended,multicall needs refactor,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L37",398
validation-696,Missing Access Control,,Unsatisfactory,,51
validation-697,`Size.buyCreditMarket(BuyCreditMarketParams)` race condition can force many transaction to revert in normal circumstances,slippage buy,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L182,107
validation-699,Compensate with `RESERVED_ID` can be used for protocol DOS via slicing credit position where attacker is the borrower to the minimal allowed pieces,"fragmentation dos, high cost, relate to validation#457",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",74
validation-70,"A borrower can force set other lender's credit position for sale, by calling compensate and passing `RESERVED ID`",change other user's forSale parameter,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L42,130
validation-701,Users Can Buypass Borrow Token Cap via Manipulation of Debt Token Supply,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,113
validation-702,Discrepancy in the `swapFee` calculation during cash-for-credit operation,fragmentation fee double count,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L185,71
validation-704,Incorrect Liquidator Reward Calculation Due to Mismatched Token Denominations,liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,53
validation-705,Rounding issue in `getCreditPositionProRataAssignedCollateral` calculation.,no significant loss,Unsatisfactory,,93
validation-706,"`YieldCurveLibrary.getAPR` rounds in different directions, returning unexpected results",,Unsatisfactory,,38
validation-708,Any existing loan can be bought by anyone,forsale true,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L81, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L119",83
validation-709,PriceOracle will use the wrong price if the Chainlink registry returns price outside min/max range.,oracle minAnswer,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/oracle/PriceFeed.sol#L84-L94,51
validation-710,BuyCreditMarket charges extra swap fees as AccountingLibrary's `getCashAmountIn()` and `getCreditAmountOut()` use incorrect base amount,"swap fee getCashAmountIn, wrong base",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L311-L332, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L274-L297",156
validation-711,"Due to wrong math, liquidation incentive is always a dust amount, exposing protocol to risk of insolvancy",liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,76
validation-712,The Market Maker does not pay the `swapFee` and it is the taker who pays the `swapFee` in the `executeBuyCreditMarket` function,"buyer should pay swap fee, more like design choice",Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L195-L196, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/AccountingLibrary.sol#L294-L296",59
validation-713,"`BuyCreditMarket.executeBuyCreditMarket` limits the maximum cash amount input more than is expected, causing calls that should be valid to fail",maxCashAmountIn should include fragmentation fee,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/BuyCreditMarket.sol#L162,43
validation-714,`Size.sellCreditMarket(SellCreditMarketParams)` race condition can force many transaction to revert in normal circumstances,slippage sell,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L190,96
validation-715,The rewards assigned to the Liquidators are insignificant (almost non-existing),liquidatorreward,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L96-L99,86
validation-716,reentrancy in accountinglibrary.sol,,Unsatisfactory,,23
validation-717,Insufficient access control on Default admin which can compromise the protocol,,Unsatisfactory,,38
validation-718,Liquidators can be front-runned ,expected behavior,Unsatisfactory,,78
validation-719,Liquidate sets `collateralRemainderCap` incorrectly as only overcollateralization part needs to be compared to the remainder,liq collateralRemainderCap,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Liquidate.sol#L107-L108,80
validation-72,ISizeAdmin contract imported but not inherited.,,Unsatisfactory,,25
validation-720,User can split a credit into multiple credits without paying fragmentation fee,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",86
validation-721,Withdraw can be DoSed by an attacker sending debt tokens to user's address,nontransferrable,Unsatisfactory,,100
validation-722,AccountingLibrary's `getCashAmountOut()` inflates swap fee by using the wrong base,"swap fee getCashAmountOut, wrong base",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/AccountingLibrary.sol#L185-L217,118
validation-725,Lenders can claim far more tokens,sandwich liquidityindex,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L67-L72,46
validation-726,Incorrect validation in `SellCreditMarket.sol` causes the function to fail unexpectedly and prevents from borrowing being performed,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,40
validation-727,It's possible to manipulate new credit position `forSale` flag via `createCreditPosition()`,change other user's forSale parameter,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/Compensate.sol#L42,90
validation-728,Wrong calculation of futureValue of DebtPosition in simple lending & borrowing case,swap fee getCreditAmountIn,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L171-L178,124
validation-729,Malicious actor can enforce liquidation to a user,,Unsatisfactory,,42
validation-73,Incorrect `withdrawUnderlyingTokenFromVariablePool` Implementation,,Unsatisfactory,,38
validation-730,`executeBuyCreditMarket()` returns incorrect value for liquidity availability control ,aave liquidity amount exclude fee,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L184, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L194, https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L243",59
validation-74, Re-Entrancy Vulnerability in repayDebt Function,,Unsatisfactory,,91
validation-75,Insufficient Validation in Liquidation Function Leading to Potential Fund Loss,,Unsatisfactory,,49
validation-76,Liquidators have the choice to liquidate a different amount of positions under the same circumstances,"liq mechanism, relate to validation#201, validation#358",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L210-L220,98
validation-77,Vulnerabilities in `executeDeposit` Function Endanger Deposit Process,,Unsatisfactory,,59
validation-79,"Invalid CR validation in `Size::compensate`, blocking users from compensating their loans",too strict CR affect compensate,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/Size.sol#L250,154
validation-80,Some functions doesn't utilize the whenNotPaused modifier,,Unsatisfactory,,22
validation-84,"Ether passed to  withdraw() function will be lost for the caller, can be stolen by other depositor",,Unsatisfactory,,70
validation-86,Storage Could Be Corrupted During an Upgrade,QA,Unsatisfactory,,36
validation-87,Muticall deposits entirely bypass the borrowAToken cap,borrowATokenCap multicall,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/Multicall.sol#L29,71
validation-88,"Invalid CR validation in `Size::withdraw`, blocking liquidatable users from withdrawing their borrow tokens",too strict CR affect withdraw,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/Size.sol#L162,100
validation-90,"using Contract's native token balance does not provide any guard in Multicall, hence will revert",,Unsatisfactory,,88
validation-91,unhandled return value for transferFrom() call during self liquidation,,Unsatisfactory,,52
validation-92,Whales can DoS the usage of the protocol,,Unsatisfactory,,32
validation-93,Some users will be required to borrow a higher amount of tokens than others,minimumCreditBorrowAToken,Satisfactory,https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/BuyCreditMarket.sol#L91-L93,40
validation-94,Numerous different ways for users to create offers that are impossible to take,feature improvement,Unsatisfactory,,36
validation-95,Fragmentation fees aren't being paid in the context of partial repayment in `Size::compensate`,fragmentation fee RESERVED_ID,Satisfactory,"https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L136, https://github.com/code-423n4/2024-06-size/blob/main/src/libraries/actions/Compensate.sol#L146-L155",106
validation-96,Borrowers might not be able to withdraw their borrowed tokens due to a very insufficient check,"aave pool balance, relate to findings#152",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/CapsLibrary.sol#L67-L72,45
validation-98,Malicious lenders can force borrowers into fragmenting their credit positions,"forced fragmentation, manipulate apr, relate to validation#522",Satisfactory,https://github.com/code-423n4/2024-06-size/blob/8850e25fb088898e9cf86f9be1c401ad155bea86/src/libraries/actions/SellCreditMarket.sol#L40,127